- Key out of order does not occur on local (docker or native), only on remote. Think it could be a ping issue. Which makes kind of no sense that events will happen out of order...could it be the way we batch in eventQueue on client or process batches in eventSendLoop on server? Only thing I can think of this we slice stream into batches essentially randomly (owing to microlatency, jitter, ping, etc) and perhaps we are incorrectly processing these tiny batches back to front leading to "123 123 132" like a "stack language stack reversal" error type pattern
- This was due to multiple overlapping eventSendLoops. Delays on response cause these eventSendLoop async iteratiosn of events array to overlap, leading to some later received events being fired before earlier received ones that were blocked from happening earlier by long response times from commands ahead of them in their batch. Rather than rearchitect everything I Just filter out some commands that are crucial to run immediately. These are listed in EXPEDITE. Also added much debugging scaffolding to surface these issues. Good work!


