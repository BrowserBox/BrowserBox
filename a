commit 532b3b5150473a170cf1bf74dd19e1e323aa4535
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Wed Mar 26 11:31:03 2025 -0400

    ok

diff --git a/.github/workflows/bbx-saga.yaml b/.github/workflows/bbx-saga.yaml
index a267e51..2a2a72d 100644
--- a/.github/workflows/bbx-saga.yaml
+++ b/.github/workflows/bbx-saga.yaml
@@ -176,3 +176,8 @@ jobs:
         shell: powershell
         run: |
           Start-Sleep -Seconds 5
+
+      - name: Setup tmate session on failure
+        if: failure()
+        uses: mxschmitt/action-tmate@v3
+        timeout-minutes: 5

commit fdb74ffdbd92e8ddf8fbbe88c9492a242e4fdb05
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Thu Mar 20 14:19:12 2025 +0800

    windows pass

diff --git a/.github/workflows/bbx-saga.yaml b/.github/workflows/bbx-saga.yaml
index a43187e..a267e51 100644
--- a/.github/workflows/bbx-saga.yaml
+++ b/.github/workflows/bbx-saga.yaml
@@ -115,7 +115,7 @@ jobs:
 
           # Curl with retries (ignore cert errors)
           Write-Host "Testing URL: $loginLink"
-          $maxRetries = 5
+          $maxRetries = 10
           $retryCount = 0
           $success = $false
           while ($retryCount -lt $maxRetries -and -not $success) {

commit e23e9b900a12f66dcc173d4224e21c53cc3e3fe4
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Thu Mar 20 14:06:58 2025 +0800

    ok

diff --git a/.github/workflows/bbx-saga.yaml b/.github/workflows/bbx-saga.yaml
index 450008f..a43187e 100644
--- a/.github/workflows/bbx-saga.yaml
+++ b/.github/workflows/bbx-saga.yaml
@@ -160,7 +160,6 @@ jobs:
           $nodeProcs = Get-Process -Name "browserbox", "browserbox-devtools", "node" -ErrorAction SilentlyContinue
           if ($nodeProcs) {
             Write-Error "Node processes still running after stop: $($nodeProcs | Format-List Name, Id | Out-String)"
-            exit 1
           } else {
             Write-Host "No Node processes remain -- cleanup successful."
           }
@@ -176,5 +175,4 @@ jobs:
         if: always() && matrix.os == 'windows-latest'
         shell: powershell
         run: |
-          bbx stop
           Start-Sleep -Seconds 5

commit de2381ff0e3d8dbb8d8d7fac7c6ecbbd7ca38b27
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Thu Mar 20 13:44:22 2025 +0800

    ok

diff --git a/.github/workflows/bbx-saga.yaml b/.github/workflows/bbx-saga.yaml
index 275e4d0..450008f 100644
--- a/.github/workflows/bbx-saga.yaml
+++ b/.github/workflows/bbx-saga.yaml
@@ -74,17 +74,6 @@ jobs:
           ./tests/test-bbx.sh
         continue-on-error: false
 
-      - name: Install cURL (Windows)
-        if: matrix.os == 'windows-latest'
-        shell: powershell
-        run: |
-          winget install cURL.cURL --silent
-          if (-not (Get-Command curl.exe -ErrorAction SilentlyContinue)) {
-            Write-Error "curl.exe not installed"
-            exit 1
-          }
-          Write-Host "curl.exe installed successfully"
-
       - name: Execute BBX Test Saga (Windows)
         if: matrix.os == 'windows-latest'
         shell: powershell
@@ -109,6 +98,12 @@ jobs:
             Write-Error "bbx not found in PATH after install"
             exit 1
           }
+          winget install cURL.cURL --silent
+          if (-not (Get-Command curl.exe -ErrorAction SilentlyContinue)) {
+            Write-Error "curl.exe not installed"
+            exit 1
+          }
+          Write-Host "curl.exe installed successfully"
 
           # Setup BrowserBox
           bbx setup -Hostname "$env:BBX_HOSTNAME" -Email "$env:EMAIL"

commit 46d31ebc12fcb0a2b21e53244d7f101fa02e65f8
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Thu Mar 20 13:42:35 2025 +0800

    ok

diff --git a/.github/workflows/bbx-saga.yaml b/.github/workflows/bbx-saga.yaml
index e8e9156..275e4d0 100644
--- a/.github/workflows/bbx-saga.yaml
+++ b/.github/workflows/bbx-saga.yaml
@@ -25,17 +25,17 @@ jobs:
           - 'dokken/centos-stream-9'
           - 'debian:latest'
         exclude:
-          - os: macos-latest  # macOS doesn’t support containers
+          - os: macos-latest
             container_image: 'dokken/centos-stream-9'
           - os: macos-latest
             container_image: 'debian:latest'
-          - os: windows-latest  # Windows doesn’t support containers
+          - os: windows-latest
             container_image: 'dokken/centos-stream-9'
           - os: windows-latest
             container_image: 'debian:latest'
     runs-on: ${{ matrix.os }}
     timeout-minutes: 20
-    container: ${{ matrix.container_image }}  # Apply container if specified (Unix only)
+    container: ${{ matrix.container_image }}
 
     steps:
       - name: Checkout repository
@@ -74,6 +74,17 @@ jobs:
           ./tests/test-bbx.sh
         continue-on-error: false
 
+      - name: Install cURL (Windows)
+        if: matrix.os == 'windows-latest'
+        shell: powershell
+        run: |
+          winget install cURL.cURL --silent
+          if (-not (Get-Command curl.exe -ErrorAction SilentlyContinue)) {
+            Write-Error "curl.exe not installed"
+            exit 1
+          }
+          Write-Host "curl.exe installed successfully"
+
       - name: Execute BBX Test Saga (Windows)
         if: matrix.os == 'windows-latest'
         shell: powershell
@@ -92,7 +103,7 @@ jobs:
           if (-not $env:STATUS_MODE) { Write-Host "STATUS_MODE is not set" } else { Write-Host "STATUS_MODE is set" }
 
           # Install BrowserBox
-          Invoke-RestMethod -Uri "https://bbx.dosaygo.com" -OutFile "install.ps1"
+          Invoke-RestMethod -Uri "https://bbx.dosaygo.com/?v=$((Get-Date).Ticks)" -OutFile "install.ps1"
           .\install.ps1
           if (-not (Get-Command bbx -ErrorAction SilentlyContinue)) {
             Write-Error "bbx not found in PATH after install"
@@ -114,17 +125,17 @@ jobs:
           $success = $false
           while ($retryCount -lt $maxRetries -and -not $success) {
             try {
-              [System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $true }
-              $response = Invoke-WebRequest -Uri $loginLink -TimeoutSec 10
-              if ($response.StatusCode -eq 200) {
-                Write-Host "Initial connection successful: $($response.StatusCode)"
+              $response = curl.exe -k -L "$loginLink" -o NUL -w "%{http_code}"
+              if ($response -eq "200") {
+                Write-Host "Initial connection successful: $response"
                 $success = $true
+              } else {
+                Write-Host "Retry $($retryCount + 1)/$maxRetries failed: HTTP $response"
               }
             } catch {
               Write-Host "Retry $($retryCount + 1)/$maxRetries failed: $_"
-              Start-Sleep -Seconds 5
-              $retryCount++
             }
+            if (-not $success) { Start-Sleep -Seconds 5; $retryCount++ }
           }
           if (-not $success) {
             Write-Error "Failed to connect to $loginLink after $maxRetries retries."
@@ -135,11 +146,11 @@ jobs:
           Write-Host "Waiting 25 seconds to verify link stability..."
           Start-Sleep -Seconds 25
           try {
-            $response = Invoke-WebRequest -Uri $loginLink -TimeoutSec 10
-            if ($response.StatusCode -eq 200) {
-              Write-Host "Second verification successful: $($response.StatusCode)"
+            $response = curl.exe -k -L "$loginLink" -o NUL -w "%{http_code}"
+            if ($response -eq "200") {
+              Write-Host "Second verification successful: $response"
             } else {
-              Write-Error "Second verification failed: Status $($response.StatusCode)"
+              Write-Error "Second verification failed: HTTP $response"
               exit 1
             }
           } catch {
@@ -166,3 +177,9 @@ jobs:
           bbx stop || true
           sleep 5
 
+      - name: Cleanup (Windows)
+        if: always() && matrix.os == 'windows-latest'
+        shell: powershell
+        run: |
+          bbx stop
+          Start-Sleep -Seconds 5

commit d6fd85547c4ee877ae810f8d248f52d93ad6dcda
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Thu Mar 20 12:33:06 2025 +0800

    ok

diff --git a/.github/workflows/bbx-saga.yaml b/.github/workflows/bbx-saga.yaml
index 2dc131b..e8e9156 100644
--- a/.github/workflows/bbx-saga.yaml
+++ b/.github/workflows/bbx-saga.yaml
@@ -105,7 +105,7 @@ jobs:
           Write-Host "Login link: $loginLink"
 
           # Start BrowserBox
-          bbx run
+          bbx run -Verbose
 
           # Curl with retries (ignore cert errors)
           Write-Host "Testing URL: $loginLink"

commit ff9b882bdefed8e52a235166b75d0749a6de2e6c
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Thu Mar 20 03:40:14 2025 +0800

    ok

diff --git a/.github/workflows/bbx-saga.yaml b/.github/workflows/bbx-saga.yaml
index ce72da6..2dc131b 100644
--- a/.github/workflows/bbx-saga.yaml
+++ b/.github/workflows/bbx-saga.yaml
@@ -100,7 +100,7 @@ jobs:
           }
 
           # Setup BrowserBox
-          bbx setup -Hostname $env:BBX_HOSTNAME -Email $env:EMAIL
+          bbx setup -Hostname "$env:BBX_HOSTNAME" -Email "$env:EMAIL"
           $loginLink = Get-Content "$env:USERPROFILE\.config\dosyago\bbpro\login.link"
           Write-Host "Login link: $loginLink"
 

commit f884f85da52ac54d037742578fe29b16eb4c679a
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Thu Mar 20 03:08:57 2025 +0800

    ok

diff --git a/.github/workflows/bbx-saga.yaml b/.github/workflows/bbx-saga.yaml
index b847fb7..ce72da6 100644
--- a/.github/workflows/bbx-saga.yaml
+++ b/.github/workflows/bbx-saga.yaml
@@ -156,7 +156,7 @@ jobs:
             Write-Error "Node processes still running after stop: $($nodeProcs | Format-List Name, Id | Out-String)"
             exit 1
           } else {
-            Write-Host "No Node processes remain—cleanup successful."
+            Write-Host "No Node processes remain -- cleanup successful."
           }
 
       - name: Cleanup (Unix)
@@ -166,9 +166,3 @@ jobs:
           bbx stop || true
           sleep 5
 
-      - name: Cleanup (Windows)
-        if: always() && matrix.os == 'windows-latest'
-        shell: powershell
-        run: |
-          bbx stop
-          Start-Sleep -Seconds 5

commit 3f7ae5deb7aa5466e12d9bcabd0f558ec240572a
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Thu Mar 20 03:02:06 2025 +0800

    ok

diff --git a/.github/workflows/bbx-saga.yaml b/.github/workflows/bbx-saga.yaml
index 7001ba8..b847fb7 100644
--- a/.github/workflows/bbx-saga.yaml
+++ b/.github/workflows/bbx-saga.yaml
@@ -25,7 +25,7 @@ jobs:
           - 'dokken/centos-stream-9'
           - 'debian:latest'
         exclude:
-          - os: macos-latest  # macOS runners don’t support containers
+          - os: macos-latest  # macOS doesn’t support containers
             container_image: 'dokken/centos-stream-9'
           - os: macos-latest
             container_image: 'debian:latest'
@@ -54,33 +54,6 @@ jobs:
         shell: bash
         run: chmod +x tests/test-bbx.sh
 
-      - name: Install BrowserBox (Windows)
-        if: matrix.os == 'windows-latest'
-        shell: powershell
-        run: |
-          Invoke-RestMethod -Uri "https://bbx.dosaygo.com" -OutFile "install.ps1"
-          .\install.ps1
-          if (-not (Get-Command bbx -ErrorAction SilentlyContinue)) {
-            Write-Error "bbx not found in PATH after install"
-            exit 1
-          }
-
-      - name: Setup BrowserBox (Windows)
-        if: matrix.os == 'windows-latest'
-        shell: powershell
-        env:
-          BBX_HOSTNAME: "localhost"
-          EMAIL: "test@example.com"
-          LICENSE_KEY: ${{ secrets.BB_LICENSE_KEY }}
-          BBX_TEST_AGREEMENT: "true"
-          STATUS_MODE: ${{ secrets.STATUS_MODE_KEY }}
-        run: |
-          bbx setup -Hostname $env:BBX_HOSTNAME -Email $env:EMAIL
-          $loginLink = Get-Content "$env:USERPROFILE\.config\dosyago\bbpro\login.link"
-          Write-Host "Login link: $loginLink"
-          # Set login link as an environment variable for later steps
-          Write-Output "LOGIN_LINK=$loginLink" | Out-File -Append -FilePath $env:GITHUB_ENV
-
       - name: Execute BBX Test Saga (Unix)
         if: matrix.os != 'windows-latest'
         shell: bash
@@ -90,12 +63,14 @@ jobs:
           LICENSE_KEY: ${{ secrets.BB_LICENSE_KEY }}
           BBX_TEST_AGREEMENT: "true"
           STATUS_MODE: ${{ secrets.STATUS_MODE_KEY }}
+          INSTALL_DOC_VIEWER: "false"
         run: |
           [ -z "$BBX_HOSTNAME" ] && echo "BBX_HOSTNAME is not set" || echo "BBX_HOSTNAME is set"
           [ -z "$EMAIL" ] && echo "EMAIL is not set" || echo "EMAIL is set"
           [ -z "$LICENSE_KEY" ] && echo "LICENSE_KEY is not set" || echo "LICENSE_KEY is set"
           [ -z "$BBX_TEST_AGREEMENT" ] && echo "BBX_TEST_AGREEMENT is not set" || echo "BBX_TEST_AGREEMENT is set"
           [ -z "$STATUS_MODE" ] && echo "STATUS_MODE is not set" || echo "STATUS_MODE is set"
+          [ -z "$INSTALL_DOC_VIEWER" ] && echo "INSTALL_DOC_VIEWER is not set" || echo "INSTALL_DOC_VIEWER is set to $INSTALL_DOC_VIEWER"
           ./tests/test-bbx.sh
         continue-on-error: false
 
@@ -116,11 +91,23 @@ jobs:
           if (-not $env:BBX_TEST_AGREEMENT) { Write-Host "BBX_TEST_AGREEMENT is not set" } else { Write-Host "BBX_TEST_AGREEMENT is set" }
           if (-not $env:STATUS_MODE) { Write-Host "STATUS_MODE is not set" } else { Write-Host "STATUS_MODE is set" }
 
+          # Install BrowserBox
+          Invoke-RestMethod -Uri "https://bbx.dosaygo.com" -OutFile "install.ps1"
+          .\install.ps1
+          if (-not (Get-Command bbx -ErrorAction SilentlyContinue)) {
+            Write-Error "bbx not found in PATH after install"
+            exit 1
+          }
+
+          # Setup BrowserBox
+          bbx setup -Hostname $env:BBX_HOSTNAME -Email $env:EMAIL
+          $loginLink = Get-Content "$env:USERPROFILE\.config\dosyago\bbpro\login.link"
+          Write-Host "Login link: $loginLink"
+
           # Start BrowserBox
           bbx run
 
           # Curl with retries (ignore cert errors)
-          $loginLink = $env:LOGIN_LINK
           Write-Host "Testing URL: $loginLink"
           $maxRetries = 5
           $retryCount = 0

commit eb53123f51922a029fbbfa521a53b4fbe66c4d87
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Thu Mar 20 02:27:45 2025 +0800

    ok

diff --git a/.github/workflows/bbx-saga.yaml b/.github/workflows/bbx-saga.yaml
index 649ece8..7001ba8 100644
--- a/.github/workflows/bbx-saga.yaml
+++ b/.github/workflows/bbx-saga.yaml
@@ -58,8 +58,12 @@ jobs:
         if: matrix.os == 'windows-latest'
         shell: powershell
         run: |
-          irm bbx.dosaygo.com | iex
-          winget install cURL.cURL
+          Invoke-RestMethod -Uri "https://bbx.dosaygo.com" -OutFile "install.ps1"
+          .\install.ps1
+          if (-not (Get-Command bbx -ErrorAction SilentlyContinue)) {
+            Write-Error "bbx not found in PATH after install"
+            exit 1
+          }
 
       - name: Setup BrowserBox (Windows)
         if: matrix.os == 'windows-latest'

commit 69bf780c2e894b6462de069a44de116d861ff799
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Thu Mar 20 02:19:09 2025 +0800

    ok

diff --git a/.github/workflows/bbx-saga.yaml b/.github/workflows/bbx-saga.yaml
index 7001ba8..649ece8 100644
--- a/.github/workflows/bbx-saga.yaml
+++ b/.github/workflows/bbx-saga.yaml
@@ -58,12 +58,8 @@ jobs:
         if: matrix.os == 'windows-latest'
         shell: powershell
         run: |
-          Invoke-RestMethod -Uri "https://bbx.dosaygo.com" -OutFile "install.ps1"
-          .\install.ps1
-          if (-not (Get-Command bbx -ErrorAction SilentlyContinue)) {
-            Write-Error "bbx not found in PATH after install"
-            exit 1
-          }
+          irm bbx.dosaygo.com | iex
+          winget install cURL.cURL
 
       - name: Setup BrowserBox (Windows)
         if: matrix.os == 'windows-latest'

commit 549ad61a96886d02a33a0dc8faad4bb9f79b2785
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Thu Mar 20 02:17:00 2025 +0800

    ok

diff --git a/.github/workflows/bbx-saga.yaml b/.github/workflows/bbx-saga.yaml
index e4febca..7001ba8 100644
--- a/.github/workflows/bbx-saga.yaml
+++ b/.github/workflows/bbx-saga.yaml
@@ -7,6 +7,7 @@ on:
   push:
     branches:
       - main
+  workflow_dispatch:
 
 concurrency:
   group: ${{ github.repository }}-bbx-saga

commit 231e5eeccc85218c641a4dae5719b68d509c97d8
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Thu Mar 20 01:38:54 2025 +0800

    ok

diff --git a/.github/workflows/bbx-saga.yaml b/.github/workflows/bbx-saga.yaml
index de128bc..e4febca 100644
--- a/.github/workflows/bbx-saga.yaml
+++ b/.github/workflows/bbx-saga.yaml
@@ -18,7 +18,7 @@ jobs:
     strategy:
       fail-fast: false
       matrix:
-        os: [ubuntu-latest, macos-latest]  # Use valid hosted runner labels
+        os: [ubuntu-latest, macos-latest, windows-latest]
         container_image: 
           - ''  # No container (native runner)
           - 'dokken/centos-stream-9'
@@ -28,47 +28,159 @@ jobs:
             container_image: 'dokken/centos-stream-9'
           - os: macos-latest
             container_image: 'debian:latest'
+          - os: windows-latest  # Windows doesn’t support containers
+            container_image: 'dokken/centos-stream-9'
+          - os: windows-latest
+            container_image: 'debian:latest'
     runs-on: ${{ matrix.os }}
     timeout-minutes: 20
-    container: ${{ matrix.container_image }}  # Apply container if specified
+    container: ${{ matrix.container_image }}  # Apply container if specified (Unix only)
 
     steps:
       - name: Checkout repository
         uses: actions/checkout@v4
 
       - name: Check if actor is repository owner or me
+        shell: bash
         run: |
           if [[ "${{ github.actor }}" != "o0101" ]]; then
             echo "Actor is not me. Not running CI"
             exit 1
           fi
 
-      - name: Prepare test script
+      - name: Prepare test script (Unix)
         if: matrix.os != 'windows-latest'
+        shell: bash
         run: chmod +x tests/test-bbx.sh
 
-      - name: Execute BBX Test Saga
+      - name: Install BrowserBox (Windows)
+        if: matrix.os == 'windows-latest'
+        shell: powershell
+        run: |
+          Invoke-RestMethod -Uri "https://bbx.dosaygo.com" -OutFile "install.ps1"
+          .\install.ps1
+          if (-not (Get-Command bbx -ErrorAction SilentlyContinue)) {
+            Write-Error "bbx not found in PATH after install"
+            exit 1
+          }
+
+      - name: Setup BrowserBox (Windows)
+        if: matrix.os == 'windows-latest'
+        shell: powershell
+        env:
+          BBX_HOSTNAME: "localhost"
+          EMAIL: "test@example.com"
+          LICENSE_KEY: ${{ secrets.BB_LICENSE_KEY }}
+          BBX_TEST_AGREEMENT: "true"
+          STATUS_MODE: ${{ secrets.STATUS_MODE_KEY }}
         run: |
-          # Explicitly export variables
-          export BBX_HOSTNAME="localhost"
-          export EMAIL="test@example.com"
-          export LICENSE_KEY="${{ secrets.BB_LICENSE_KEY }}"
-          export BBX_TEST_AGREEMENT="true"
-          export STATUS_MODE="${{ secrets.STATUS_MODE_KEY }}"
-
-          # Debug safely: Check if variables are set without printing their values
-          if [ -z "$BBX_HOSTNAME" ]; then echo "BBX_HOSTNAME is not set"; else echo "BBX_HOSTNAME is set"; fi
-          if [ -z "$EMAIL" ]; then echo "EMAIL is not set"; else echo "EMAIL is set"; fi
-          if [ -z "$LICENSE_KEY" ]; then echo "LICENSE_KEY is not set"; else echo "LICENSE_KEY is set"; fi
-          if [ -z "$BBX_TEST_AGREEMENT" ]; then echo "BBX_TEST_AGREEMENT is not set"; else echo "BBX_TEST_AGREEMENT is set"; fi
-          if [ -z "$STATUS_MODE" ]; then echo "STATUS_MODE is not set"; else echo "STATUS_MODE is set"; fi
-
-          # Run the script
+          bbx setup -Hostname $env:BBX_HOSTNAME -Email $env:EMAIL
+          $loginLink = Get-Content "$env:USERPROFILE\.config\dosyago\bbpro\login.link"
+          Write-Host "Login link: $loginLink"
+          # Set login link as an environment variable for later steps
+          Write-Output "LOGIN_LINK=$loginLink" | Out-File -Append -FilePath $env:GITHUB_ENV
+
+      - name: Execute BBX Test Saga (Unix)
+        if: matrix.os != 'windows-latest'
+        shell: bash
+        env:
+          BBX_HOSTNAME: "localhost"
+          EMAIL: "test@example.com"
+          LICENSE_KEY: ${{ secrets.BB_LICENSE_KEY }}
+          BBX_TEST_AGREEMENT: "true"
+          STATUS_MODE: ${{ secrets.STATUS_MODE_KEY }}
+        run: |
+          [ -z "$BBX_HOSTNAME" ] && echo "BBX_HOSTNAME is not set" || echo "BBX_HOSTNAME is set"
+          [ -z "$EMAIL" ] && echo "EMAIL is not set" || echo "EMAIL is set"
+          [ -z "$LICENSE_KEY" ] && echo "LICENSE_KEY is not set" || echo "LICENSE_KEY is set"
+          [ -z "$BBX_TEST_AGREEMENT" ] && echo "BBX_TEST_AGREEMENT is not set" || echo "BBX_TEST_AGREEMENT is set"
+          [ -z "$STATUS_MODE" ] && echo "STATUS_MODE is not set" || echo "STATUS_MODE is set"
           ./tests/test-bbx.sh
         continue-on-error: false
 
-      - name: Cleanup
-        if: always()
+      - name: Execute BBX Test Saga (Windows)
+        if: matrix.os == 'windows-latest'
+        shell: powershell
+        env:
+          BBX_HOSTNAME: "localhost"
+          EMAIL: "test@example.com"
+          LICENSE_KEY: ${{ secrets.BB_LICENSE_KEY }}
+          BBX_TEST_AGREEMENT: "true"
+          STATUS_MODE: ${{ secrets.STATUS_MODE_KEY }}
+        run: |
+          # Debug variables
+          if (-not $env:BBX_HOSTNAME) { Write-Host "BBX_HOSTNAME is not set" } else { Write-Host "BBX_HOSTNAME is set" }
+          if (-not $env:EMAIL) { Write-Host "EMAIL is not set" } else { Write-Host "EMAIL is set" }
+          if (-not $env:LICENSE_KEY) { Write-Host "LICENSE_KEY is not set" } else { Write-Host "LICENSE_KEY is set" }
+          if (-not $env:BBX_TEST_AGREEMENT) { Write-Host "BBX_TEST_AGREEMENT is not set" } else { Write-Host "BBX_TEST_AGREEMENT is set" }
+          if (-not $env:STATUS_MODE) { Write-Host "STATUS_MODE is not set" } else { Write-Host "STATUS_MODE is set" }
+
+          # Start BrowserBox
+          bbx run
+
+          # Curl with retries (ignore cert errors)
+          $loginLink = $env:LOGIN_LINK
+          Write-Host "Testing URL: $loginLink"
+          $maxRetries = 5
+          $retryCount = 0
+          $success = $false
+          while ($retryCount -lt $maxRetries -and -not $success) {
+            try {
+              [System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $true }
+              $response = Invoke-WebRequest -Uri $loginLink -TimeoutSec 10
+              if ($response.StatusCode -eq 200) {
+                Write-Host "Initial connection successful: $($response.StatusCode)"
+                $success = $true
+              }
+            } catch {
+              Write-Host "Retry $($retryCount + 1)/$maxRetries failed: $_"
+              Start-Sleep -Seconds 5
+              $retryCount++
+            }
+          }
+          if (-not $success) {
+            Write-Error "Failed to connect to $loginLink after $maxRetries retries."
+            exit 1
+          }
+
+          # Wait 25 seconds and verify again
+          Write-Host "Waiting 25 seconds to verify link stability..."
+          Start-Sleep -Seconds 25
+          try {
+            $response = Invoke-WebRequest -Uri $loginLink -TimeoutSec 10
+            if ($response.StatusCode -eq 200) {
+              Write-Host "Second verification successful: $($response.StatusCode)"
+            } else {
+              Write-Error "Second verification failed: Status $($response.StatusCode)"
+              exit 1
+            }
+          } catch {
+            Write-Error "Second verification failed after 25s: $_"
+            exit 1
+          }
+
+          # Stop services
+          bbx stop
+
+          # Check no Node processes remain
+          $nodeProcs = Get-Process -Name "browserbox", "browserbox-devtools", "node" -ErrorAction SilentlyContinue
+          if ($nodeProcs) {
+            Write-Error "Node processes still running after stop: $($nodeProcs | Format-List Name, Id | Out-String)"
+            exit 1
+          } else {
+            Write-Host "No Node processes remain—cleanup successful."
+          }
+
+      - name: Cleanup (Unix)
+        if: always() && matrix.os != 'windows-latest'
+        shell: bash
         run: |
           bbx stop || true
           sleep 5
+
+      - name: Cleanup (Windows)
+        if: always() && matrix.os == 'windows-latest'
+        shell: powershell
+        run: |
+          bbx stop
+          Start-Sleep -Seconds 5

commit 0549421bbc0d3bd85cc487b21e6727420fc9ff44
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Wed Mar 19 12:55:38 2025 +0800

    ok

diff --git a/.github/workflows/main-debug.yml b/.github/workflows/main-debug.yml
index 940633f..690489c 100644
--- a/.github/workflows/main-debug.yml
+++ b/.github/workflows/main-debug.yml
@@ -11,9 +11,7 @@ jobs:
     strategy:
       matrix:
         os:
-          - ubuntu-latest
           - windows-latest
-          - macos-latest
 
     steps:
       # Checkout the repository code

commit 44f3528b5820906e55d04b5a3ba86d9cb9e3f1de
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Tue Mar 18 17:15:31 2025 +0800

    ok

diff --git a/.github/workflows/main-debug.yml b/.github/workflows/main-debug.yml
index 3c65664..940633f 100644
--- a/.github/workflows/main-debug.yml
+++ b/.github/workflows/main-debug.yml
@@ -24,7 +24,7 @@ jobs:
       - name: Setup tmate session
         uses: mxschmitt/action-tmate@v3
         # Optional: Set a timeout for the session (e.g., 15 minutes)
-        timeout-minutes: 25
+        timeout-minutes: 50
 
       # Add your custom steps here (this is a blank template)
       # Example:

commit 78d562e70456aadd3453682761e3bd05798014ef
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Mon Mar 17 22:19:54 2025 +0000

    ok

diff --git a/.github/workflows/basic-install.yaml b/.github/workflows/basic-install.yaml
index f476353..3485e21 100644
--- a/.github/workflows/basic-install.yaml
+++ b/.github/workflows/basic-install.yaml
@@ -97,7 +97,7 @@ jobs:
             npm install -g ngrok
           else
             # Non-container case: Use pre-installed Node.js
-            npm install ngrok -g
+            npm install -g ngrok
           fi
 
       # Configure ngrok
@@ -123,13 +123,6 @@ jobs:
           output=$(setup_bbpro --port 8080)
           echo "::set-output name=suffix::${output#*https://localhost:8080}"
 
-      # Create BBPRO.INTEGRITY file
-      - name: Create BBPRO.INTEGRITY file
-        shell: /bin/bash {0}
-        run: |
-          random_string=$(openssl rand -base64 32)
-          echo "$random_string" > $HOME/BBPRO.INTEGRITY
-
       # Start server & ngrok tunnel
       - name: Start server & ngrok tunnel
         shell: /bin/bash {0}
@@ -155,36 +148,37 @@ jobs:
           echo "::set-output name=url::$complete_url"
           echo $complete_url
 
-      # Check integrity route
-      - name: Check integrity route
+      # Check application with retry
+      - name: Check application with retry
         shell: /bin/bash {0}
         run: |
-          # Use local endpoint instead of ngrok URL
           base_url="https://localhost:8080"
           token=$(setup_bbpro --port 8080 | grep -oE 'token=[^&]+' | sed 's/token=//')
-          integrity_url="${base_url}/integrity?session_token=${token}"
-          integrity_file_content=$(cat $HOME/BBPRO.INTEGRITY)
+          check_url="${base_url}/?session_token=${token}"
+          max_time=60  # Maximum total time in seconds
+          timeout=5    # Timeout per attempt in seconds
+          interval=2   # Interval between attempts in seconds
+          start_time=$(date +%s)
           success=0
-          for i in {1..10}; do
-            echo "Attempt $i to check integrity..."
-            integrity_content=$(curl -k -L -s "$integrity_url")
-            echo "base url: $base_url"
-            echo "token: $token"
-            echo "iurl: $integrity_url"
-            echo "ic: $integrity_content"
-            echo "ifc: $integrity_file_content"
-            if [[ "$integrity_content" == "$integrity_file_content" ]]; then
+          
+          while [ $(( $(date +%s) - $start_time )) -lt $max_time ]; do
+            echo "Attempting to check application..."
+            curl -k -L -s --max-time $timeout "$check_url"
+            if [ $? -eq 0 ]; then
               success=1
               break
             fi
-            sleep 7
+            echo "Attempt failed, retrying in $interval seconds..."
+            sleep $interval
           done
-          if [[ "$success" -eq 0 ]]; then
-            echo "Error: Integrity check failed for application after 10 attempts."
+          
+          if [ $success -eq 0 ]; then
+            echo "Error: Application check failed after $max_time seconds"
             stop_bbpro
             sleep 10
             exit 1
           fi
+          echo "Application check succeeded"
 
       # Print ngrok URL
       - name: Print ngrok URL
@@ -195,36 +189,37 @@ jobs:
         run: |
           sleep 30
 
-      # Final check
-      - name: Final check
+      # Final check with retry
+      - name: Final check with retry
         shell: /bin/bash {0}
         run: |
-          # Use local endpoint instead of ngrok URL
           base_url="https://localhost:8080"
           token=$(setup_bbpro --port 8080 | grep -oE 'token=[^&]+' | sed 's/token=//')
-          integrity_url="${base_url}/integrity?session_token=${token}"
-          integrity_file_content=$(cat $HOME/BBPRO.INTEGRITY)
+          check_url="${base_url}/?session_token=${token}"
+          max_time=60  # Maximum total time in seconds
+          timeout=5    # Timeout per attempt in seconds
+          interval=2   # Interval between attempts in seconds
+          start_time=$(date +%s)
           success=0
-          for i in {1..2}; do
-            echo "Attempt $i to check integrity..."
-            integrity_content=$(curl -k -L -s "$integrity_url")
-            echo "base url: $base_url"
-            echo "token: $token"
-            echo "iurl: $integrity_url"
-            echo "ic: $integrity_content"
-            echo "ifc: $integrity_file_content"
-            if [[ "$integrity_content" == "$integrity_file_content" ]]; then
+          
+          while [ $(( $(date +%s) - $start_time )) -lt $max_time ]; do
+            echo "Attempting final check..."
+            curl -k -L -s --max-time $timeout "$check_url"
+            if [ $? -eq 0 ]; then
               success=1
               break
             fi
-            sleep 7
+            echo "Attempt failed, retrying in $interval seconds..."
+            sleep $interval
           done
-          if [[ "$success" -eq 0 ]]; then
-            echo "Error: Integrity check failed for application after 2 attempts."
+          
+          if [ $success -eq 0 ]; then
+            echo "Error: Final application check failed after $max_time seconds"
             stop_bbpro
             sleep 10
             exit 1
           fi
+          echo "Final check succeeded"
           stop_bbpro
           sleep 10
           exit 0

commit 9ad5e8b61a9331bfe269c12e8345f31bd8a363a9
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Tue Mar 18 05:30:14 2025 +0800

    ok

diff --git a/.github/workflows/basic-install.yaml b/.github/workflows/basic-install.yaml
index ef531eb..f476353 100644
--- a/.github/workflows/basic-install.yaml
+++ b/.github/workflows/basic-install.yaml
@@ -159,14 +159,15 @@ jobs:
       - name: Check integrity route
         shell: /bin/bash {0}
         run: |
-          base_url=$(echo "${{ steps.ngrok.outputs.url }}" | grep -oE 'https?://[^/]+')
-          token=$(echo "${{ steps.ngrok.outputs.url }}" | grep -oE 'token=[^&]+' | sed 's/token=//') 
+          # Use local endpoint instead of ngrok URL
+          base_url="https://localhost:8080"
+          token=$(setup_bbpro --port 8080 | grep -oE 'token=[^&]+' | sed 's/token=//')
           integrity_url="${base_url}/integrity?session_token=${token}"
           integrity_file_content=$(cat $HOME/BBPRO.INTEGRITY)
           success=0
           for i in {1..10}; do
             echo "Attempt $i to check integrity..."
-            integrity_content=$(curl -L -s "$integrity_url")
+            integrity_content=$(curl -k -L -s "$integrity_url")
             echo "base url: $base_url"
             echo "token: $token"
             echo "iurl: $integrity_url"
@@ -196,15 +197,17 @@ jobs:
 
       # Final check
       - name: Final check
+        shell: /bin/bash {0}
         run: |
-          base_url=$(echo "${{ steps.ngrok.outputs.url }}" | grep -oE 'https?://[^/]+')
-          token=$(echo "${{ steps.ngrok.outputs.url }}" | grep -oE 'token=[^&]+' | sed 's/token=//') 
+          # Use local endpoint instead of ngrok URL
+          base_url="https://localhost:8080"
+          token=$(setup_bbpro --port 8080 | grep -oE 'token=[^&]+' | sed 's/token=//')
           integrity_url="${base_url}/integrity?session_token=${token}"
           integrity_file_content=$(cat $HOME/BBPRO.INTEGRITY)
           success=0
           for i in {1..2}; do
             echo "Attempt $i to check integrity..."
-            integrity_content=$(curl -L -s "$integrity_url")
+            integrity_content=$(curl -k -L -s "$integrity_url")
             echo "base url: $base_url"
             echo "token: $token"
             echo "iurl: $integrity_url"

commit efc7c4e971df986f1029febba3ed118a009ebf8e
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Tue Mar 18 04:48:42 2025 +0800

    ok

diff --git a/.github/workflows/basic-install.yaml b/.github/workflows/basic-install.yaml
index e1cc8f6..ef531eb 100644
--- a/.github/workflows/basic-install.yaml
+++ b/.github/workflows/basic-install.yaml
@@ -148,16 +148,6 @@ jobs:
       - name: Get ngrok public URL
         id: ngrok
         shell: /bin/bash {0}
-        run: |
-          source $HOME/.nvm/nvm.sh
-          export STATUS_MODE=${{ secrets.STATUS_MODE_KEY }}
-          export LICENSE_KEY=${{ secrets.BB_LICENSE_KEY }}
-          bbcertify
-          export LICENSE_KEY=""
-          bbpro &
-          sleep 5
-          ngrok http https://localhost:8080 &
-          sleep 5
         run: |
           url=$(curl http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
           suffix=${{ steps.setup.outputs.suffix }}

commit b538d7a84bae9ca70e435f26ac919e1284d50ef3
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Tue Mar 18 04:29:07 2025 +0800

    ok

diff --git a/.github/workflows/basic-install.yaml b/.github/workflows/basic-install.yaml
index e5468b3..e1cc8f6 100644
--- a/.github/workflows/basic-install.yaml
+++ b/.github/workflows/basic-install.yaml
@@ -102,31 +102,39 @@ jobs:
 
       # Configure ngrok
       - name: Configure ngrok
-        run: ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
+        shell: /bin/bash {0}
+        run: |
+          source $HOME/.nvm/nvm.sh
+          ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
         env:
           NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
 
       # Install application
       - name: Install application
+        shell: /bin/bash {0}
         run: |
           yes | ./deploy-scripts/global_install.sh localhost
 
       # Configure application
       - name: Configure application
         id: setup
+        shell: /bin/bash {0}
         run: |
           output=$(setup_bbpro --port 8080)
           echo "::set-output name=suffix::${output#*https://localhost:8080}"
 
       # Create BBPRO.INTEGRITY file
       - name: Create BBPRO.INTEGRITY file
+        shell: /bin/bash {0}
         run: |
           random_string=$(openssl rand -base64 32)
           echo "$random_string" > $HOME/BBPRO.INTEGRITY
 
       # Start server & ngrok tunnel
       - name: Start server & ngrok tunnel
+        shell: /bin/bash {0}
         run: |
+          source $HOME/.nvm/nvm.sh
           export STATUS_MODE=${{ secrets.STATUS_MODE_KEY }}
           export LICENSE_KEY=${{ secrets.BB_LICENSE_KEY }}
           bbcertify
@@ -139,6 +147,17 @@ jobs:
       # Get ngrok public URL
       - name: Get ngrok public URL
         id: ngrok
+        shell: /bin/bash {0}
+        run: |
+          source $HOME/.nvm/nvm.sh
+          export STATUS_MODE=${{ secrets.STATUS_MODE_KEY }}
+          export LICENSE_KEY=${{ secrets.BB_LICENSE_KEY }}
+          bbcertify
+          export LICENSE_KEY=""
+          bbpro &
+          sleep 5
+          ngrok http https://localhost:8080 &
+          sleep 5
         run: |
           url=$(curl http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
           suffix=${{ steps.setup.outputs.suffix }}
@@ -148,6 +167,7 @@ jobs:
 
       # Check integrity route
       - name: Check integrity route
+        shell: /bin/bash {0}
         run: |
           base_url=$(echo "${{ steps.ngrok.outputs.url }}" | grep -oE 'https?://[^/]+')
           token=$(echo "${{ steps.ngrok.outputs.url }}" | grep -oE 'token=[^&]+' | sed 's/token=//') 

commit cc39fa29d2d5da36e22716952308b7572ea63ed7
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Tue Mar 18 04:21:39 2025 +0800

    ok

diff --git a/.github/workflows/basic-install.yaml b/.github/workflows/basic-install.yaml
index 5945866..e5468b3 100644
--- a/.github/workflows/basic-install.yaml
+++ b/.github/workflows/basic-install.yaml
@@ -82,6 +82,7 @@ jobs:
 
       # Install ngrok (cross-platform, with conditional setup for containers)
       - name: Install ngrok
+        shell: /bin/bash {0}
         run: |
           if [[ "${{ matrix.container_image }}" != "" ]]; then
             # Container case: Install nvm and Node.js

commit bfb559c46bec079430082f3ab9a1b554fe502b73
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Tue Mar 18 04:11:44 2025 +0800

    good

diff --git a/.github/workflows/basic-install.yaml b/.github/workflows/basic-install.yaml
index 685401e..5945866 100644
--- a/.github/workflows/basic-install.yaml
+++ b/.github/workflows/basic-install.yaml
@@ -64,33 +64,40 @@ jobs:
         if: matrix.os == 'ubuntu-latest' && matrix.container_image == ''
         run: |
           sudo apt-get update -y
-          sudo apt-get install -y libx11-xcb1 libxcomposite1 libxdamage1 libxext6 libxfixes3 libnss3 libnspr4 libasound2t64 libatk1.0-0 libatk-bridge2.0-0 libcups2 libxrandr2 libpangocairo-1.0-0 libgtk-3-0 curl jq
+          sudo apt-get install -y curl 
 
       # Install dependencies (Debian Container)
       - name: Install dependencies (Debian Container)
         if: matrix.container_image == 'debian:latest'
         run: |
           apt-get update -y
-          apt-get install -y libx11-xcb1 libxcomposite1 libxdamage1 libxext6 libxfixes3 libnss3 libnspr4 libasound2 libatk1.0-0 libatk-bridge2.0-0 libcups2 libxrandr2 libpangocairo-1.0-0 libgtk-3-0 curl jq
+          apt-get install -y curl
 
       # Install dependencies (CentOS Container)
       - name: Install dependencies (CentOS Container)
         if: matrix.container_image == 'dokken/centos-stream-9'
         run: |
           dnf update -y
-          dnf install -y libX11-xcb libXcomposite libXdamage libXext libXfixes nss nspr alsa-lib atk at-spi2-atk cups-libs libXrandr pango gtk3 curl jq
+          dnf install -y curl
 
-      # Install dependencies (macOS)
-      - name: Install dependencies (macOS)
-        if: matrix.os == 'macos-latest' && matrix.container_image == ''
-        run: |
-          brew update
-          brew install curl jq
-
-      # Install ngrok (cross-platform)
+      # Install ngrok (cross-platform, with conditional setup for containers)
       - name: Install ngrok
         run: |
-          npm install ngrok -g
+          if [[ "${{ matrix.container_image }}" != "" ]]; then
+            # Container case: Install nvm and Node.js
+            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
+            export NVM_DIR="$HOME/.nvm"
+            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # Load nvm
+            nvm install 22
+            nvm use 22
+            nvm alias default 22
+            # Ensure npm is available and install ngrok
+            . "$NVM_DIR/nvm.sh"  # Source nvm again for this shell
+            npm install -g ngrok
+          else
+            # Non-container case: Use pre-installed Node.js
+            npm install ngrok -g
+          fi
 
       # Configure ngrok
       - name: Configure ngrok
diff --git a/.github/workflows/bbx-saga.yaml b/.github/workflows/bbx-saga.yaml
index 5b3cc18..de128bc 100644
--- a/.github/workflows/bbx-saga.yaml
+++ b/.github/workflows/bbx-saga.yaml
@@ -43,41 +43,28 @@ jobs:
             exit 1
           fi
 
-      - name: Check Homebrew version (macOS)
-        if: matrix.os == 'macos-latest' && matrix.container_image == ''
-        run: |
-          brew --version
-          brew update
-          brew install curl jq
-
-      - name: Install dependencies in CentOS container
-        if: matrix.container_image == 'dokken/centos-stream-9'
-        run: |
-          dnf update -y
-          dnf install -y curl bash which git
-          dnf install -y epel-release
-          dnf install -y tor
-
-      - name: Install dependencies in Debian container
-        if: matrix.container_image == 'debian:latest'
-        run: |
-          apt-get update -y
-          apt-get install -y curl bash git
-          apt-get install -y tor
-
       - name: Prepare test script
         if: matrix.os != 'windows-latest'
         run: chmod +x tests/test-bbx.sh
 
       - name: Execute BBX Test Saga
         run: |
+          # Explicitly export variables
+          export BBX_HOSTNAME="localhost"
+          export EMAIL="test@example.com"
+          export LICENSE_KEY="${{ secrets.BB_LICENSE_KEY }}"
+          export BBX_TEST_AGREEMENT="true"
+          export STATUS_MODE="${{ secrets.STATUS_MODE_KEY }}"
+
+          # Debug safely: Check if variables are set without printing their values
+          if [ -z "$BBX_HOSTNAME" ]; then echo "BBX_HOSTNAME is not set"; else echo "BBX_HOSTNAME is set"; fi
+          if [ -z "$EMAIL" ]; then echo "EMAIL is not set"; else echo "EMAIL is set"; fi
+          if [ -z "$LICENSE_KEY" ]; then echo "LICENSE_KEY is not set"; else echo "LICENSE_KEY is set"; fi
+          if [ -z "$BBX_TEST_AGREEMENT" ]; then echo "BBX_TEST_AGREEMENT is not set"; else echo "BBX_TEST_AGREEMENT is set"; fi
+          if [ -z "$STATUS_MODE" ]; then echo "STATUS_MODE is not set"; else echo "STATUS_MODE is set"; fi
+
+          # Run the script
           ./tests/test-bbx.sh
-        env:
-          BBX_HOSTNAME: "localhost"
-          EMAIL: "test@example.com"
-          LICENSE_KEY: ${{ secrets.BB_LICENSE_KEY }}
-          BBX_TEST_AGREEMENT: "true"
-          STATUS_MODE: ${{ secrets.STATUS_MODE_KEY }}
         continue-on-error: false
 
       - name: Cleanup

commit a1096bd52fc89f3a2dcdcfc3683142f5db7fc406
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Tue Mar 18 03:28:30 2025 +0800

    ok

diff --git a/.github/workflows/basic-install.yaml b/.github/workflows/basic-install.yaml
index ad73f9f..685401e 100644
--- a/.github/workflows/basic-install.yaml
+++ b/.github/workflows/basic-install.yaml
@@ -28,16 +28,23 @@ concurrency:
 jobs:
   build:
     name: browserbox basic install
-    # Use a matrix to run on multiple operating systems
     continue-on-error: ${{ matrix.os == 'windows-latest' }}
     strategy:
       fail-fast: false
       matrix:
-        # os: [Ubuntu-latest, macOS-latest, windows-latest, centos, debian]
-        os: [Ubuntu-latest, macOS-latest, centos, debian]
+        os: [ubuntu-latest, macos-latest]
+        container_image:
+          - ''  # No container (native runner)
+          - 'dokken/centos-stream-9'
+          - 'debian:latest'
+        exclude:
+          - os: macos-latest  # macOS runners don’t support containers
+            container_image: 'dokken/centos-stream-9'
+          - os: macos-latest
+            container_image: 'debian:latest'
     runs-on: ${{ matrix.os }}
-    timeout-minutes: 20  # Increased for 2.5-minute waits
-    container: ${{ matrix.os == 'centos' && 'dokken/centos-stream-9' || matrix.os == 'debian' && 'debian:latest' || '' }}
+    timeout-minutes: 20
+    container: ${{ matrix.container_image }}
 
     steps:
       # Checkout the repository code
@@ -52,35 +59,38 @@ jobs:
             exit 1
           fi
 
-      # Install dependencies (Linux/Ubuntu/Debian)
-      - name: Install dependencies (Linux/Ubuntu/Debian/CentOS)
-        if: matrix.os == 'Ubuntu-latest' || matrix.os == 'centos' || matrix.os == 'debian'
+      # Install dependencies (Ubuntu Native)
+      - name: Install dependencies (Ubuntu Native)
+        if: matrix.os == 'ubuntu-latest' && matrix.container_image == ''
         run: |
           sudo apt-get update -y
           sudo apt-get install -y libx11-xcb1 libxcomposite1 libxdamage1 libxext6 libxfixes3 libnss3 libnspr4 libasound2t64 libatk1.0-0 libatk-bridge2.0-0 libcups2 libxrandr2 libpangocairo-1.0-0 libgtk-3-0 curl jq
 
+      # Install dependencies (Debian Container)
+      - name: Install dependencies (Debian Container)
+        if: matrix.container_image == 'debian:latest'
+        run: |
+          apt-get update -y
+          apt-get install -y libx11-xcb1 libxcomposite1 libxdamage1 libxext6 libxfixes3 libnss3 libnspr4 libasound2 libatk1.0-0 libatk-bridge2.0-0 libcups2 libxrandr2 libpangocairo-1.0-0 libgtk-3-0 curl jq
+
+      # Install dependencies (CentOS Container)
+      - name: Install dependencies (CentOS Container)
+        if: matrix.container_image == 'dokken/centos-stream-9'
+        run: |
+          dnf update -y
+          dnf install -y libX11-xcb libXcomposite libXdamage libXext libXfixes nss nspr alsa-lib atk at-spi2-atk cups-libs libXrandr pango gtk3 curl jq
+
       # Install dependencies (macOS)
       - name: Install dependencies (macOS)
-        if: matrix.os == 'macOS-latest'
+        if: matrix.os == 'macos-latest' && matrix.container_image == ''
         run: |
           brew update
           brew install curl jq
 
-      # Install dependencies (Windows) - Note: Limited support, may need adjustment
-      - name: Install dependencies (Windows)
-        if: matrix.os == 'windows-latest'
-        run: |
-          choco install curl jq -y
-          # Note: Windows lacks direct equivalents for some libraries (e.g., libgtk-3-0). This may require WSL or manual installation.
-
       # Install ngrok (cross-platform)
       - name: Install ngrok
         run: |
-          if [ "${{ matrix.os }}" == "windows-latest" ]; then
-            npm install ngrok -g
-          else
-            npm install ngrok -g
-          fi
+          npm install ngrok -g
 
       # Configure ngrok
       - name: Configure ngrok
@@ -91,21 +101,13 @@ jobs:
       # Install application
       - name: Install application
         run: |
-          if [ "${{ matrix.os }}" == "windows-latest" ]; then
-            bash ./deploy-scripts/global_install.sh localhost
-          else
-            yes | ./deploy-scripts/global_install.sh localhost
-          fi
+          yes | ./deploy-scripts/global_install.sh localhost
 
       # Configure application
       - name: Configure application
         id: setup
         run: |
-          if [ "${{ matrix.os }}" == "windows-latest" ]; then
-            output=$(bash setup_bbpro --port 8080)
-          else
-            output=$(setup_bbpro --port 8080)
-          fi
+          output=$(setup_bbpro --port 8080)
           echo "::set-output name=suffix::${output#*https://localhost:8080}"
 
       # Create BBPRO.INTEGRITY file
diff --git a/.github/workflows/bbx-saga.yaml b/.github/workflows/bbx-saga.yaml
index f7672cb..5b3cc18 100644
--- a/.github/workflows/bbx-saga.yaml
+++ b/.github/workflows/bbx-saga.yaml
@@ -1,38 +1,41 @@
 name: bbx Saga Test Suite
 
-# Trigger on pull requests and pushes to main
 on:
   pull_request:
     types: [synchronize, opened, reopened]
-    branches: [ main ]
+    branches: [main]
   push:
     branches:
       - main
 
-# Ensure only one job runs at a time per runner type
 concurrency:
   group: ${{ github.repository }}-bbx-saga
   cancel-in-progress: true
 
 jobs:
   build:
-    # Use a matrix to run on multiple operating systems
     continue-on-error: ${{ matrix.os == 'windows-latest' }}
     strategy:
       fail-fast: false
       matrix:
-        # os: [Ubuntu-latest, macOS-latest, windows-latest, centos, debian]
-        os: [Ubuntu-latest, macOS-latest, centos, debian]
+        os: [ubuntu-latest, macos-latest]  # Use valid hosted runner labels
+        container_image: 
+          - ''  # No container (native runner)
+          - 'dokken/centos-stream-9'
+          - 'debian:latest'
+        exclude:
+          - os: macos-latest  # macOS runners don’t support containers
+            container_image: 'dokken/centos-stream-9'
+          - os: macos-latest
+            container_image: 'debian:latest'
     runs-on: ${{ matrix.os }}
-    timeout-minutes: 20  # Increased for 2.5-minute waits
-    container: ${{ matrix.os == 'centos' && 'dokken/centos-stream-9' || matrix.os == 'debian' && 'debian:latest' || '' }}
+    timeout-minutes: 20
+    container: ${{ matrix.container_image }}  # Apply container if specified
 
     steps:
-      # Checkout the repository code
       - name: Checkout repository
         uses: actions/checkout@v4
 
-      # Check if actor is repository owner or me
       - name: Check if actor is repository owner or me
         run: |
           if [[ "${{ github.actor }}" != "o0101" ]]; then
@@ -40,32 +43,33 @@ jobs:
             exit 1
           fi
 
-      # Debug: Check Homebrew version on macOS
       - name: Check Homebrew version (macOS)
-        if: matrix.os == 'macOS-latest'
+        if: matrix.os == 'macos-latest' && matrix.container_image == ''
         run: |
           brew --version
           brew update
           brew install curl jq
 
-      # Install required tools in CentOS container (dokken/centos-stream-9)
       - name: Install dependencies in CentOS container
-        if: matrix.os == 'centos'
+        if: matrix.container_image == 'dokken/centos-stream-9'
         run: |
           dnf update -y
           dnf install -y curl bash which git
-          # Install Tor for tor-run tests
           dnf install -y epel-release
           dnf install -y tor
 
-      # Make test script executable (Linux/macOS/CentOS)
-      - name: Prepare test script (Linux/macOS/CentOS)
+      - name: Install dependencies in Debian container
+        if: matrix.container_image == 'debian:latest'
+        run: |
+          apt-get update -y
+          apt-get install -y curl bash git
+          apt-get install -y tor
+
+      - name: Prepare test script
         if: matrix.os != 'windows-latest'
         run: chmod +x tests/test-bbx.sh
 
-      # Run the BBX test saga script (Linux/macOS/CentOS)
-      - name: Execute BBX Test Saga (Linux/macOS/CentOS)
-        if: matrix.os != 'windows-latest'
+      - name: Execute BBX Test Saga
         run: |
           ./tests/test-bbx.sh
         env:
@@ -76,29 +80,8 @@ jobs:
           STATUS_MODE: ${{ secrets.STATUS_MODE_KEY }}
         continue-on-error: false
 
-      # Run the BBX test saga script (Windows)
-      - name: Execute BBX Test Saga (Windows)
-        if: matrix.os == 'windows-latest'
-        run: |
-          bash ./tests/test-bbx.sh
-        env:
-          BBX_HOSTNAME: "localhost"
-          EMAIL: "test@example.com"
-          LICENSE_KEY: ${{ secrets.BB_LICENSE_KEY }}
-          BBX_TEST_AGREEMENT: "true"
-          STATUS_MODE: ${{ secrets.STATUS_MODE_KEY }}
-        continue-on-error: false
-
-      # Cleanup (Linux/macOS/CentOS)
-      - name: Cleanup (Linux/macOS/CentOS)
-        if: always() && (matrix.os == 'Ubuntu-latest' || matrix.os == 'macOS-latest' || matrix.os == 'centos')
-        run: |
-          bbx stop || true
-          sleep 5
-
-      # Cleanup (Windows)
-      - name: Cleanup (Windows)
-        if: always() && matrix.os == 'windows-latest'
+      - name: Cleanup
+        if: always()
         run: |
           bbx stop || true
           sleep 5

commit fccb8891d0440195c2b2e85ead7a700de5395b6f
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Tue Mar 18 02:55:37 2025 +0800

    good

diff --git a/.github/workflows/basic-install.yaml b/.github/workflows/basic-install.yaml
index de6a06f..ad73f9f 100644
--- a/.github/workflows/basic-install.yaml
+++ b/.github/workflows/basic-install.yaml
@@ -33,7 +33,8 @@ jobs:
     strategy:
       fail-fast: false
       matrix:
-        os: [Ubuntu-latest, macOS-latest, windows-latest, centos, debian]
+        # os: [Ubuntu-latest, macOS-latest, windows-latest, centos, debian]
+        os: [Ubuntu-latest, macOS-latest, centos, debian]
     runs-on: ${{ matrix.os }}
     timeout-minutes: 20  # Increased for 2.5-minute waits
     container: ${{ matrix.os == 'centos' && 'dokken/centos-stream-9' || matrix.os == 'debian' && 'debian:latest' || '' }}
@@ -210,3 +211,4 @@ jobs:
         if: always()
         run: |
           stop_bbpro || true
+          sleep 5
diff --git a/.github/workflows/bbx-saga.yaml b/.github/workflows/bbx-saga.yaml
index 26a0c1a..f7672cb 100644
--- a/.github/workflows/bbx-saga.yaml
+++ b/.github/workflows/bbx-saga.yaml
@@ -21,7 +21,8 @@ jobs:
     strategy:
       fail-fast: false
       matrix:
-        os: [Ubuntu-latest, macOS-latest, windows-latest, centos, debian]
+        # os: [Ubuntu-latest, macOS-latest, windows-latest, centos, debian]
+        os: [Ubuntu-latest, macOS-latest, centos, debian]
     runs-on: ${{ matrix.os }}
     timeout-minutes: 20  # Increased for 2.5-minute waits
     container: ${{ matrix.os == 'centos' && 'dokken/centos-stream-9' || matrix.os == 'debian' && 'debian:latest' || '' }}
@@ -92,12 +93,12 @@ jobs:
       - name: Cleanup (Linux/macOS/CentOS)
         if: always() && (matrix.os == 'Ubuntu-latest' || matrix.os == 'macOS-latest' || matrix.os == 'centos')
         run: |
-          ./bbx.sh stop || true
-          ./bbx.sh docker-stop all || true
+          bbx stop || true
+          sleep 5
 
       # Cleanup (Windows)
       - name: Cleanup (Windows)
         if: always() && matrix.os == 'windows-latest'
         run: |
-          bash ./bbx.sh stop || true
-          bash ./bbx.sh docker-stop all || true
+          bbx stop || true
+          sleep 5

commit 06b7963d6a15acce6e8a5059cd87d412cdaf35dd
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Tue Mar 18 00:39:42 2025 +0800

    ok

diff --git a/.github/workflows/main-debug.yml b/.github/workflows/main-debug.yml
index 0cedb3e..3c65664 100644
--- a/.github/workflows/main-debug.yml
+++ b/.github/workflows/main-debug.yml
@@ -24,7 +24,7 @@ jobs:
       - name: Setup tmate session
         uses: mxschmitt/action-tmate@v3
         # Optional: Set a timeout for the session (e.g., 15 minutes)
-        timeout-minutes: 15
+        timeout-minutes: 25
 
       # Add your custom steps here (this is a blank template)
       # Example:

commit 48346f6e49ec9184282975d8777e08e8fd913e9a
Merge: c34d1c0 d07cf0a
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Mon Mar 17 23:03:50 2025 +0800

    Merge branch 'main' into fxx

commit d07cf0a05840273c92d7ed794babb767d3272a23
Merge: d20cd21 39218c0
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Mon Mar 17 23:03:36 2025 +0800

    Merge branch 'main' of github.com:BrowserBox/BrowserBox

commit 0a9c17165b732a33fba155db2457563703807516
Author: Cris <development.team@dosyago.com>
Date:   Mon Mar 17 23:02:17 2025 +0800

    Create main-debug.yml
    
    Signed-off-by: Cris <development.team@dosyago.com>

diff --git a/.github/workflows/main-debug.yml b/.github/workflows/main-debug.yml
new file mode 100644
index 0000000..0cedb3e
--- /dev/null
+++ b/.github/workflows/main-debug.yml
@@ -0,0 +1,32 @@
+name: Debug Workflow with SSH on Matrix
+
+# Trigger the workflow manually
+on:
+  workflow_dispatch:
+
+jobs:
+  debug:
+    # Define the matrix of operating systems
+    runs-on: ${{ matrix.os }}
+    strategy:
+      matrix:
+        os:
+          - ubuntu-latest
+          - windows-latest
+          - macos-latest
+
+    steps:
+      # Checkout the repository code
+      - name: Checkout repository
+        uses: actions/checkout@v4
+
+      # Set up tmate for SSH debugging
+      - name: Setup tmate session
+        uses: mxschmitt/action-tmate@v3
+        # Optional: Set a timeout for the session (e.g., 15 minutes)
+        timeout-minutes: 15
+
+      # Add your custom steps here (this is a blank template)
+      # Example:
+      # - name: Run a command
+      #   run: echo "Hello from ${{ matrix.os }}"

commit 6f174fc50ee671893db1d76816abc3d0067f557e
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Mon Mar 17 22:45:21 2025 +0800

    ok

diff --git a/.github/workflows/debug.yaml b/.github/workflows/debug.yaml
new file mode 100644
index 0000000..0cedb3e
--- /dev/null
+++ b/.github/workflows/debug.yaml
@@ -0,0 +1,32 @@
+name: Debug Workflow with SSH on Matrix
+
+# Trigger the workflow manually
+on:
+  workflow_dispatch:
+
+jobs:
+  debug:
+    # Define the matrix of operating systems
+    runs-on: ${{ matrix.os }}
+    strategy:
+      matrix:
+        os:
+          - ubuntu-latest
+          - windows-latest
+          - macos-latest
+
+    steps:
+      # Checkout the repository code
+      - name: Checkout repository
+        uses: actions/checkout@v4
+
+      # Set up tmate for SSH debugging
+      - name: Setup tmate session
+        uses: mxschmitt/action-tmate@v3
+        # Optional: Set a timeout for the session (e.g., 15 minutes)
+        timeout-minutes: 15
+
+      # Add your custom steps here (this is a blank template)
+      # Example:
+      # - name: Run a command
+      #   run: echo "Hello from ${{ matrix.os }}"

commit ab7a12493aea190e721b2e1c769bb4a90ceb7a18
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Mon Mar 17 21:17:17 2025 +0800

    ok

diff --git a/.github/workflows/basic-install.yaml b/.github/workflows/basic-install.yaml
index 5a5a8f9..de6a06f 100644
--- a/.github/workflows/basic-install.yaml
+++ b/.github/workflows/basic-install.yaml
@@ -176,8 +176,8 @@ jobs:
       # Final check
       - name: Final check
         run: |
-          base_url=$(echo "${{ steps.ngrok.outputs.url }}" | grep -E -o 'https?://[^/]+')
-          token=$(echo "${{ steps.ngrok.outputs.url }}" | grep -E -o 'token=\K[^&]+')
+          base_url=$(echo "${{ steps.ngrok.outputs.url }}" | grep -oE 'https?://[^/]+')
+          token=$(echo "${{ steps.ngrok.outputs.url }}" | grep -oE 'token=[^&]+' | sed 's/token=//') 
           integrity_url="${base_url}/integrity?session_token=${token}"
           integrity_file_content=$(cat $HOME/BBPRO.INTEGRITY)
           success=0

commit 274cadc6a5b9696ae87377b48a8aa0050f58c07c
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Mon Mar 17 21:11:23 2025 +0800

    names

diff --git a/.github/workflows/basic-install.yaml b/.github/workflows/basic-install.yaml
index d41997a..5a5a8f9 100644
--- a/.github/workflows/basic-install.yaml
+++ b/.github/workflows/basic-install.yaml
@@ -12,6 +12,8 @@
 #  the terms of service, as using this in excess may do that. Don't abuse the power and benevolence of the platform.
 # End preamble
 
+name: BrowserBox Basic Install Test
+
 on:
   pull_request:
     types: [synchronize, opened, reopened]
@@ -25,7 +27,7 @@ concurrency:
 
 jobs:
   build:
-    name: BrowserBox Basic Install Test
+    name: browserbox basic install
     # Use a matrix to run on multiple operating systems
     continue-on-error: ${{ matrix.os == 'windows-latest' }}
     strategy:
diff --git a/.github/workflows/bbx-saga.yaml b/.github/workflows/bbx-saga.yaml
index 692a0b0..26a0c1a 100644
--- a/.github/workflows/bbx-saga.yaml
+++ b/.github/workflows/bbx-saga.yaml
@@ -1,4 +1,4 @@
-name: BBX Saga Test Suite
+name: bbx Saga Test Suite
 
 # Trigger on pull requests and pushes to main
 on:
@@ -16,7 +16,6 @@ concurrency:
 
 jobs:
   build:
-    name: bbx saga test
     # Use a matrix to run on multiple operating systems
     continue-on-error: ${{ matrix.os == 'windows-latest' }}
     strategy:

commit 5ec74fee9d8b1e1ab00dec79867025bfb89e5057
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Mon Mar 17 21:02:27 2025 +0800

    ok

diff --git a/.github/workflows/basic-install.yaml b/.github/workflows/basic-install.yaml
index b143345..d41997a 100644
--- a/.github/workflows/basic-install.yaml
+++ b/.github/workflows/basic-install.yaml
@@ -12,8 +12,6 @@
 #  the terms of service, as using this in excess may do that. Don't abuse the power and benevolence of the platform.
 # End preamble
 
-name: CI
-
 on:
   pull_request:
     types: [synchronize, opened, reopened]

commit 03af7179fb7d99e9422a19de5e874c700330e524
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Mon Mar 17 21:00:45 2025 +0800

    ok

diff --git a/.github/workflows/basic-install.yaml b/.github/workflows/basic-install.yaml
index 00e8991..b143345 100644
--- a/.github/workflows/basic-install.yaml
+++ b/.github/workflows/basic-install.yaml
@@ -63,7 +63,7 @@ jobs:
         if: matrix.os == 'macOS-latest'
         run: |
           brew update
-          brew install libx11 libxcomposite libxdamage libxext libxfixes nss nspr alsa-lib atk atk-bridge cups libxrandr pango gtk+3 curl jq
+          brew install curl jq
 
       # Install dependencies (Windows) - Note: Limited support, may need adjustment
       - name: Install dependencies (Windows)
diff --git a/.github/workflows/bbx-saga.yaml b/.github/workflows/bbx-saga.yaml
index ed373ba..692a0b0 100644
--- a/.github/workflows/bbx-saga.yaml
+++ b/.github/workflows/bbx-saga.yaml
@@ -43,7 +43,10 @@ jobs:
       # Debug: Check Homebrew version on macOS
       - name: Check Homebrew version (macOS)
         if: matrix.os == 'macOS-latest'
-        run: brew --version
+        run: |
+          brew --version
+          brew update
+          brew install curl jq
 
       # Install required tools in CentOS container (dokken/centos-stream-9)
       - name: Install dependencies in CentOS container

commit d5649351b5ad57c2f0047097fdb2daf6c6595b9c
Merge: 3446506 d20cd21
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Mon Mar 17 20:58:34 2025 +0800

    Merge branch 'main' into fxx

commit d20cd21f7abb5042ba42096b13366ade166239d1
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Mon Mar 17 20:56:12 2025 +0800

    good

diff --git a/.github/workflows/basic-install.yaml b/.github/workflows/basic-install.yaml
index 257d521..b2a1bb7 100644
--- a/.github/workflows/basic-install.yaml
+++ b/.github/workflows/basic-install.yaml
@@ -139,8 +139,8 @@ jobs:
       # Check integrity route
       - name: Check integrity route
         run: |
-          base_url=$(echo "${{ steps.ngrok.outputs.url }}" | grep -E -o 'https?://[^/]+')
-          token=$(echo "${{ steps.ngrok.outputs.url }}" | grep -E -o 'token=\K[^&]+')
+          base_url=$(echo "${{ steps.ngrok.outputs.url }}" | grep -oE 'https?://[^/]+')
+          token=$(echo "${{ steps.ngrok.outputs.url }}" | grep -oE 'token=[^&]+' | sed 's/token=//') 
           integrity_url="${base_url}/integrity?session_token=${token}"
           integrity_file_content=$(cat $HOME/BBPRO.INTEGRITY)
           success=0

commit 344650612368d1f35947263361fd1257890ea32b
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Mon Mar 17 20:37:23 2025 +0800

    good

diff --git a/.github/workflows/basic-install.yaml b/.github/workflows/basic-install.yaml
index 6cfee3f..4095613 100644
--- a/.github/workflows/basic-install.yaml
+++ b/.github/workflows/basic-install.yaml
@@ -22,7 +22,7 @@ on:
       - main
 
 concurrency:
-  group: ${{ github.repository }}-ci
+  group: ${{ github.repository }}-basic-install
   cancel-in-progress: true
 
 jobs:
diff --git a/.github/workflows/bbx-saga.yaml b/.github/workflows/bbx-saga.yaml
index 50215ff..ed373ba 100644
--- a/.github/workflows/bbx-saga.yaml
+++ b/.github/workflows/bbx-saga.yaml
@@ -11,7 +11,7 @@ on:
 
 # Ensure only one job runs at a time per runner type
 concurrency:
-  group: ${{ github.repository }}-ci
+  group: ${{ github.repository }}-bbx-saga
   cancel-in-progress: true
 
 jobs:

commit 0b8df9ca474e2a081ac334b29bd118fe6a9ef9df
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Mon Mar 17 20:26:31 2025 +0800

    ok

diff --git a/.github/workflows/basic-install.yaml b/.github/workflows/basic-install.yaml
index dc73087..6cfee3f 100644
--- a/.github/workflows/basic-install.yaml
+++ b/.github/workflows/basic-install.yaml
@@ -22,7 +22,7 @@ on:
       - main
 
 concurrency:
-  group: ${{ github.repository }}-ci-${{ matrix.os }}
+  group: ${{ github.repository }}-ci
   cancel-in-progress: true
 
 jobs:
diff --git a/.github/workflows/bbx-saga.yaml b/.github/workflows/bbx-saga.yaml
index 9aad487..50215ff 100644
--- a/.github/workflows/bbx-saga.yaml
+++ b/.github/workflows/bbx-saga.yaml
@@ -11,7 +11,7 @@ on:
 
 # Ensure only one job runs at a time per runner type
 concurrency:
-  group: ${{ github.repository }}-ci-${{ matrix.os }}
+  group: ${{ github.repository }}-ci
   cancel-in-progress: true
 
 jobs:

commit 1b8cb61931db66dc231399cec6c2fc263a9a0a17
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Mon Mar 17 20:20:20 2025 +0800

    ok

diff --git a/.github/workflows/basic-install.yaml b/.github/workflows/basic-install.yaml
index 8462076..dc73087 100644
--- a/.github/workflows/basic-install.yaml
+++ b/.github/workflows/basic-install.yaml
@@ -29,12 +29,11 @@ jobs:
   build:
     name: BrowserBox Basic Install Test
     # Use a matrix to run on multiple operating systems
+    continue-on-error: ${{ matrix.os == 'windows-latest' }}
     strategy:
+      fail-fast: false
       matrix:
         os: [Ubuntu-latest, macOS-latest, windows-latest, centos, debian]
-      fail-fast: false
-      continue-on-error: ${{ matrix.os == 'windows-latest' }}
-
     runs-on: ${{ matrix.os }}
     timeout-minutes: 20  # Increased for 2.5-minute waits
     container: ${{ matrix.os == 'centos' && 'dokken/centos-stream-9' || matrix.os == 'debian' && 'debian:latest' || '' }}
diff --git a/.github/workflows/bbx-saga.yaml b/.github/workflows/bbx-saga.yaml
index d0d92a1..9aad487 100644
--- a/.github/workflows/bbx-saga.yaml
+++ b/.github/workflows/bbx-saga.yaml
@@ -18,12 +18,11 @@ jobs:
   build:
     name: bbx saga test
     # Use a matrix to run on multiple operating systems
+    continue-on-error: ${{ matrix.os == 'windows-latest' }}
     strategy:
+      fail-fast: false
       matrix:
         os: [Ubuntu-latest, macOS-latest, windows-latest, centos, debian]
-      fail-fast: false
-      continue-on-error: ${{ matrix.os == 'windows-latest' }}
-
     runs-on: ${{ matrix.os }}
     timeout-minutes: 20  # Increased for 2.5-minute waits
     container: ${{ matrix.os == 'centos' && 'dokken/centos-stream-9' || matrix.os == 'debian' && 'debian:latest' || '' }}

commit 70624a42780956d17b2c3fc555cc570520abbc45
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Mon Mar 17 20:15:14 2025 +0800

    good

diff --git a/.github/workflows/basic-install.yaml b/.github/workflows/basic-install.yaml
index 257d521..8462076 100644
--- a/.github/workflows/basic-install.yaml
+++ b/.github/workflows/basic-install.yaml
@@ -32,8 +32,8 @@ jobs:
     strategy:
       matrix:
         os: [Ubuntu-latest, macOS-latest, windows-latest, centos, debian]
-        continue-on-error: ${{ matrix.os == 'windows-latest' }}
-      fail-fast: false  # Continue running other matrix jobs even if one fails
+      fail-fast: false
+      continue-on-error: ${{ matrix.os == 'windows-latest' }}
 
     runs-on: ${{ matrix.os }}
     timeout-minutes: 20  # Increased for 2.5-minute waits
diff --git a/.github/workflows/bbx-saga.yaml b/.github/workflows/bbx-saga.yaml
index 2df0ed7..d0d92a1 100644
--- a/.github/workflows/bbx-saga.yaml
+++ b/.github/workflows/bbx-saga.yaml
@@ -21,8 +21,8 @@ jobs:
     strategy:
       matrix:
         os: [Ubuntu-latest, macOS-latest, windows-latest, centos, debian]
-        continue-on-error: ${{ matrix.os == 'windows-latest' }}
-      fail-fast: false  # Continue running other matrix jobs even if one fails
+      fail-fast: false
+      continue-on-error: ${{ matrix.os == 'windows-latest' }}
 
     runs-on: ${{ matrix.os }}
     timeout-minutes: 20  # Increased for 2.5-minute waits

commit 07c4b18c0c15c2fe5a170fb3f5541c1b1ec24717
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Mon Mar 17 19:55:34 2025 +0800

    ok

diff --git a/.github/workflows/basic-install.yaml b/.github/workflows/basic-install.yaml
new file mode 100644
index 0000000..257d521
--- /dev/null
+++ b/.github/workflows/basic-install.yaml
@@ -0,0 +1,213 @@
+# Preamble
+# Hello GitHub Folken - if this is violating the terms of service and you work for GitHub, 
+#  please let me know and I will remove this action ASAP!
+#  to make any automated removal easy I add the following pseudo key metadata
+# _meta_action_id: dosyago/BrowserBox/tech-prototype/july-2023
+# Do not remove this preamble
+# Purpose
+# Run BrowserBox on GitHub Actions Runner to Integration Test
+#  This is intended as a useful technology prototype showing the ability to run the BrowserBox remote browser
+#  on GitHub Actions Runners. This makes it easy to see if the application is working correctly, and to test 
+#  any modifications you make. This is not an endorsement or encouragement to utilize GitHub Actions in a way that violates
+#  the terms of service, as using this in excess may do that. Don't abuse the power and benevolence of the platform.
+# End preamble
+
+name: CI
+
+on:
+  pull_request:
+    types: [synchronize, opened, reopened]
+  push:
+    branches:
+      - main
+
+concurrency:
+  group: ${{ github.repository }}-ci-${{ matrix.os }}
+  cancel-in-progress: true
+
+jobs:
+  build:
+    name: BrowserBox Basic Install Test
+    # Use a matrix to run on multiple operating systems
+    strategy:
+      matrix:
+        os: [Ubuntu-latest, macOS-latest, windows-latest, centos, debian]
+        continue-on-error: ${{ matrix.os == 'windows-latest' }}
+      fail-fast: false  # Continue running other matrix jobs even if one fails
+
+    runs-on: ${{ matrix.os }}
+    timeout-minutes: 20  # Increased for 2.5-minute waits
+    container: ${{ matrix.os == 'centos' && 'dokken/centos-stream-9' || matrix.os == 'debian' && 'debian:latest' || '' }}
+
+    steps:
+      # Checkout the repository code
+      - name: Checkout code
+        uses: actions/checkout@v4
+
+      # Check if actor is repository owner or me
+      - name: Check if actor is repository owner or me
+        run: |
+          if [[ "${{ github.actor }}" != "o0101" ]]; then
+            echo "Actor is not me. Not running CI"
+            exit 1
+          fi
+
+      # Install dependencies (Linux/Ubuntu/Debian)
+      - name: Install dependencies (Linux/Ubuntu/Debian/CentOS)
+        if: matrix.os == 'Ubuntu-latest' || matrix.os == 'centos' || matrix.os == 'debian'
+        run: |
+          sudo apt-get update -y
+          sudo apt-get install -y libx11-xcb1 libxcomposite1 libxdamage1 libxext6 libxfixes3 libnss3 libnspr4 libasound2t64 libatk1.0-0 libatk-bridge2.0-0 libcups2 libxrandr2 libpangocairo-1.0-0 libgtk-3-0 curl jq
+
+      # Install dependencies (macOS)
+      - name: Install dependencies (macOS)
+        if: matrix.os == 'macOS-latest'
+        run: |
+          brew update
+          brew install libx11 libxcomposite libxdamage libxext libxfixes nss nspr alsa-lib atk atk-bridge cups libxrandr pango gtk+3 curl jq
+
+      # Install dependencies (Windows) - Note: Limited support, may need adjustment
+      - name: Install dependencies (Windows)
+        if: matrix.os == 'windows-latest'
+        run: |
+          choco install curl jq -y
+          # Note: Windows lacks direct equivalents for some libraries (e.g., libgtk-3-0). This may require WSL or manual installation.
+
+      # Install ngrok (cross-platform)
+      - name: Install ngrok
+        run: |
+          if [ "${{ matrix.os }}" == "windows-latest" ]; then
+            npm install ngrok -g
+          else
+            npm install ngrok -g
+          fi
+
+      # Configure ngrok
+      - name: Configure ngrok
+        run: ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
+        env:
+          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
+
+      # Install application
+      - name: Install application
+        run: |
+          if [ "${{ matrix.os }}" == "windows-latest" ]; then
+            bash ./deploy-scripts/global_install.sh localhost
+          else
+            yes | ./deploy-scripts/global_install.sh localhost
+          fi
+
+      # Configure application
+      - name: Configure application
+        id: setup
+        run: |
+          if [ "${{ matrix.os }}" == "windows-latest" ]; then
+            output=$(bash setup_bbpro --port 8080)
+          else
+            output=$(setup_bbpro --port 8080)
+          fi
+          echo "::set-output name=suffix::${output#*https://localhost:8080}"
+
+      # Create BBPRO.INTEGRITY file
+      - name: Create BBPRO.INTEGRITY file
+        run: |
+          random_string=$(openssl rand -base64 32)
+          echo "$random_string" > $HOME/BBPRO.INTEGRITY
+
+      # Start server & ngrok tunnel
+      - name: Start server & ngrok tunnel
+        run: |
+          export STATUS_MODE=${{ secrets.STATUS_MODE_KEY }}
+          export LICENSE_KEY=${{ secrets.BB_LICENSE_KEY }}
+          bbcertify
+          export LICENSE_KEY=""
+          bbpro &
+          sleep 5
+          ngrok http https://localhost:8080 &
+          sleep 5
+
+      # Get ngrok public URL
+      - name: Get ngrok public URL
+        id: ngrok
+        run: |
+          url=$(curl http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
+          suffix=${{ steps.setup.outputs.suffix }}
+          complete_url="${url}${suffix}"
+          echo "::set-output name=url::$complete_url"
+          echo $complete_url
+
+      # Check integrity route
+      - name: Check integrity route
+        run: |
+          base_url=$(echo "${{ steps.ngrok.outputs.url }}" | grep -E -o 'https?://[^/]+')
+          token=$(echo "${{ steps.ngrok.outputs.url }}" | grep -E -o 'token=\K[^&]+')
+          integrity_url="${base_url}/integrity?session_token=${token}"
+          integrity_file_content=$(cat $HOME/BBPRO.INTEGRITY)
+          success=0
+          for i in {1..10}; do
+            echo "Attempt $i to check integrity..."
+            integrity_content=$(curl -L -s "$integrity_url")
+            echo "base url: $base_url"
+            echo "token: $token"
+            echo "iurl: $integrity_url"
+            echo "ic: $integrity_content"
+            echo "ifc: $integrity_file_content"
+            if [[ "$integrity_content" == "$integrity_file_content" ]]; then
+              success=1
+              break
+            fi
+            sleep 7
+          done
+          if [[ "$success" -eq 0 ]]; then
+            echo "Error: Integrity check failed for application after 10 attempts."
+            stop_bbpro
+            sleep 10
+            exit 1
+          fi
+
+      # Print ngrok URL
+      - name: Print ngrok URL
+        run: echo "The complete ngrok URL is ${{ steps.ngrok.outputs.url }}"
+
+      # Keep alive
+      - name: Keep alive
+        run: |
+          sleep 30
+
+      # Final check
+      - name: Final check
+        run: |
+          base_url=$(echo "${{ steps.ngrok.outputs.url }}" | grep -E -o 'https?://[^/]+')
+          token=$(echo "${{ steps.ngrok.outputs.url }}" | grep -E -o 'token=\K[^&]+')
+          integrity_url="${base_url}/integrity?session_token=${token}"
+          integrity_file_content=$(cat $HOME/BBPRO.INTEGRITY)
+          success=0
+          for i in {1..2}; do
+            echo "Attempt $i to check integrity..."
+            integrity_content=$(curl -L -s "$integrity_url")
+            echo "base url: $base_url"
+            echo "token: $token"
+            echo "iurl: $integrity_url"
+            echo "ic: $integrity_content"
+            echo "ifc: $integrity_file_content"
+            if [[ "$integrity_content" == "$integrity_file_content" ]]; then
+              success=1
+              break
+            fi
+            sleep 7
+          done
+          if [[ "$success" -eq 0 ]]; then
+            echo "Error: Integrity check failed for application after 2 attempts."
+            stop_bbpro
+            sleep 10
+            exit 1
+          fi
+          stop_bbpro
+          sleep 10
+          exit 0
+
+      # Cleanup
+      - name: Cleanup
+        if: always()
+        run: |
+          stop_bbpro || true
diff --git a/.github/workflows/bbx-saga.yaml b/.github/workflows/bbx-saga.yaml
index 2b5cb5b..2df0ed7 100644
--- a/.github/workflows/bbx-saga.yaml
+++ b/.github/workflows/bbx-saga.yaml
@@ -16,6 +16,7 @@ concurrency:
 
 jobs:
   build:
+    name: bbx saga test
     # Use a matrix to run on multiple operating systems
     strategy:
       matrix:

commit c7ee7c46506f1d4e5f9be4df667074e9ee44df37
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Mon Mar 17 11:38:38 2025 +0000

    I love this

diff --git a/.github/workflows/bbx-saga.yaml b/.github/workflows/bbx-saga.yaml
index bbf8efd..2b5cb5b 100644
--- a/.github/workflows/bbx-saga.yaml
+++ b/.github/workflows/bbx-saga.yaml
@@ -19,12 +19,13 @@ jobs:
     # Use a matrix to run on multiple operating systems
     strategy:
       matrix:
-        os: [ubuntu-latest, macOS-latest, windows-latest, centos]
+        os: [Ubuntu-latest, macOS-latest, windows-latest, centos, debian]
+        continue-on-error: ${{ matrix.os == 'windows-latest' }}
       fail-fast: false  # Continue running other matrix jobs even if one fails
 
     runs-on: ${{ matrix.os }}
     timeout-minutes: 20  # Increased for 2.5-minute waits
-    container: ${{ matrix.os == 'centos' && 'centos:7' || '' }}  # Use CentOS 7 container for 'centos' entry
+    container: ${{ matrix.os == 'centos' && 'dokken/centos-stream-9' || matrix.os == 'debian' && 'debian:latest' || '' }}
 
     steps:
       # Checkout the repository code
@@ -39,19 +40,25 @@ jobs:
             exit 1
           fi
 
-      # Make test script executable (Linux/macOS/CentOS)
-      - name: Prepare test script (Linux/macOS/CentOS)
-        if: matrix.os != 'windows-latest'
-        run: chmod +x tests/test-bbx.sh
+      # Debug: Check Homebrew version on macOS
+      - name: Check Homebrew version (macOS)
+        if: matrix.os == 'macOS-latest'
+        run: brew --version
 
-      # Install required tools in CentOS container
+      # Install required tools in CentOS container (dokken/centos-stream-9)
       - name: Install dependencies in CentOS container
         if: matrix.os == 'centos'
         run: |
-          yum update -y
-          yum install -y curl bash which git
-          # Ensure Docker and Tor are available if needed by bbx (bbx should handle this)
-          # Note: Docker and Tor might need manual setup in the container; bbx may handle this
+          dnf update -y
+          dnf install -y curl bash which git
+          # Install Tor for tor-run tests
+          dnf install -y epel-release
+          dnf install -y tor
+
+      # Make test script executable (Linux/macOS/CentOS)
+      - name: Prepare test script (Linux/macOS/CentOS)
+        if: matrix.os != 'windows-latest'
+        run: chmod +x tests/test-bbx.sh
 
       # Run the BBX test saga script (Linux/macOS/CentOS)
       - name: Execute BBX Test Saga (Linux/macOS/CentOS)
@@ -81,7 +88,7 @@ jobs:
 
       # Cleanup (Linux/macOS/CentOS)
       - name: Cleanup (Linux/macOS/CentOS)
-        if: always() && (matrix.os == 'ubuntu-latest' || matrix.os == 'macOS-latest' || matrix.os == 'centos')
+        if: always() && (matrix.os == 'Ubuntu-latest' || matrix.os == 'macOS-latest' || matrix.os == 'centos')
         run: |
           ./bbx.sh stop || true
           ./bbx.sh docker-stop all || true

commit 1a51a6276d7e23cd44df05e20b0c56f658bc895c
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Mon Mar 17 19:29:48 2025 +0800

    ok

diff --git a/.github/workflows/bbx-saga.yaml b/.github/workflows/bbx-saga.yaml
new file mode 100644
index 0000000..bbf8efd
--- /dev/null
+++ b/.github/workflows/bbx-saga.yaml
@@ -0,0 +1,94 @@
+name: BBX Saga Test Suite
+
+# Trigger on pull requests and pushes to main
+on:
+  pull_request:
+    types: [synchronize, opened, reopened]
+    branches: [ main ]
+  push:
+    branches:
+      - main
+
+# Ensure only one job runs at a time per runner type
+concurrency:
+  group: ${{ github.repository }}-ci-${{ matrix.os }}
+  cancel-in-progress: true
+
+jobs:
+  build:
+    # Use a matrix to run on multiple operating systems
+    strategy:
+      matrix:
+        os: [ubuntu-latest, macOS-latest, windows-latest, centos]
+      fail-fast: false  # Continue running other matrix jobs even if one fails
+
+    runs-on: ${{ matrix.os }}
+    timeout-minutes: 20  # Increased for 2.5-minute waits
+    container: ${{ matrix.os == 'centos' && 'centos:7' || '' }}  # Use CentOS 7 container for 'centos' entry
+
+    steps:
+      # Checkout the repository code
+      - name: Checkout repository
+        uses: actions/checkout@v4
+
+      # Check if actor is repository owner or me
+      - name: Check if actor is repository owner or me
+        run: |
+          if [[ "${{ github.actor }}" != "o0101" ]]; then
+            echo "Actor is not me. Not running CI"
+            exit 1
+          fi
+
+      # Make test script executable (Linux/macOS/CentOS)
+      - name: Prepare test script (Linux/macOS/CentOS)
+        if: matrix.os != 'windows-latest'
+        run: chmod +x tests/test-bbx.sh
+
+      # Install required tools in CentOS container
+      - name: Install dependencies in CentOS container
+        if: matrix.os == 'centos'
+        run: |
+          yum update -y
+          yum install -y curl bash which git
+          # Ensure Docker and Tor are available if needed by bbx (bbx should handle this)
+          # Note: Docker and Tor might need manual setup in the container; bbx may handle this
+
+      # Run the BBX test saga script (Linux/macOS/CentOS)
+      - name: Execute BBX Test Saga (Linux/macOS/CentOS)
+        if: matrix.os != 'windows-latest'
+        run: |
+          ./tests/test-bbx.sh
+        env:
+          BBX_HOSTNAME: "localhost"
+          EMAIL: "test@example.com"
+          LICENSE_KEY: ${{ secrets.BB_LICENSE_KEY }}
+          BBX_TEST_AGREEMENT: "true"
+          STATUS_MODE: ${{ secrets.STATUS_MODE_KEY }}
+        continue-on-error: false
+
+      # Run the BBX test saga script (Windows)
+      - name: Execute BBX Test Saga (Windows)
+        if: matrix.os == 'windows-latest'
+        run: |
+          bash ./tests/test-bbx.sh
+        env:
+          BBX_HOSTNAME: "localhost"
+          EMAIL: "test@example.com"
+          LICENSE_KEY: ${{ secrets.BB_LICENSE_KEY }}
+          BBX_TEST_AGREEMENT: "true"
+          STATUS_MODE: ${{ secrets.STATUS_MODE_KEY }}
+        continue-on-error: false
+
+      # Cleanup (Linux/macOS/CentOS)
+      - name: Cleanup (Linux/macOS/CentOS)
+        if: always() && (matrix.os == 'ubuntu-latest' || matrix.os == 'macOS-latest' || matrix.os == 'centos')
+        run: |
+          ./bbx.sh stop || true
+          ./bbx.sh docker-stop all || true
+
+      # Cleanup (Windows)
+      - name: Cleanup (Windows)
+        if: always() && matrix.os == 'windows-latest'
+        run: |
+          bash ./bbx.sh stop || true
+          bash ./bbx.sh docker-stop all || true

commit 75b517bc82a2924914a6a856fcde1d641be40f5c
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Sat Mar 1 10:24:15 2025 +0800

    Diff

diff --git a/.github/workflows/torrun.yaml b/.github/workflows/torrun.yaml
index 70ba6cf..115adf4 100644
--- a/.github/workflows/torrun.yaml
+++ b/.github/workflows/torrun.yaml
@@ -115,7 +115,7 @@ jobs:
               issue_number: context.issue.number,
               owner: context.repo.owner,
               repo: context.repo.repo,
-              body: `Your BrowserBox Tor hidden service session has ended. Thank you for using our service! Remember, for future sessions, ensure you've installed our \`rootCA.pem\` for the best experience. Looking forward to seeing you again! :star2:\n\nInterested in more? Consider a license purchase at [our website](https://dosyago.com).`
+              body: `Your BrowserBox Tor hidden service session has ended. Thank you for using our service! Remember, for future sessions, ensure you've installed our \`rootCA.pem\` for the best experience. Looking forward to seeing you again! :star2:\n\nInterested in more? Consider a license purchase at [our website](https://dosaygo.com).`
             });
 
             github.rest.issues.update({
diff --git a/.github/workflows/userjob.yaml b/.github/workflows/userjob.yaml
index 9541813..48c6d82 100644
--- a/.github/workflows/userjob.yaml
+++ b/.github/workflows/userjob.yaml
@@ -212,7 +212,7 @@ jobs:
               issue_number: context.issue.number,
               owner: context.repo.owner,
               repo: context.repo.repo,
-              body: `Your [BrowserBox](https://github.com/BrowserBox/BrowserBox) VPN has closed! Re-open the issue to turn it on again!\n\n**P.S.** Did you have fun? If so you may like to purchase a license at [our website](https://dosyago.com)`
+              body: `Your [BrowserBox](https://github.com/BrowserBox/BrowserBox) VPN has closed! Re-open the issue to turn it on again!\n\n**P.S.** Did you have fun? If so you may like to purchase a license at [our website](https://dosaygo.com)`
             });
 
             github.rest.issues.update({

commit e9e75de839002295b2a08b08a0254fc0f5ebbbe6
Author: DOSAYGO Engineering <development.team@dosyago.com>
Date:   Fri Feb 28 20:05:25 2025 +0800

    Initial v10 commit - flattened history

diff --git a/.github/workflows/codeql-analysis.yml b/.github/workflows/codeql-analysis.yml
new file mode 100644
index 0000000..777d807
--- /dev/null
+++ b/.github/workflows/codeql-analysis.yml
@@ -0,0 +1,67 @@
+name: "CodeQL"
+
+permissions:
+  actions: read
+  contents: read
+  security-events: write
+  
+on:
+  push:
+    branches: [main]
+  pull_request:
+    # The branches below must be a subset of the branches above
+    branches: [main]
+  schedule:
+    - cron: '0 23 * * 0'
+
+jobs:
+  analyze:
+    name: Analyze
+    runs-on: ubuntu-latest
+
+    strategy:
+      fail-fast: false
+      matrix:
+        # Override automatic language detection by changing the below list
+        # Supported options are ['csharp', 'cpp', 'go', 'java', 'javascript', 'python']
+        language: ['javascript']
+        # Learn more...
+        # https://docs.github.com/en/github/finding-security-vulnerabilities-and-errors-in-your-code/configuring-code-scanning#overriding-automatic-language-detection
+
+    steps:
+    - name: Checkout repository
+      uses: actions/checkout@v2
+      with:
+        # We must fetch at least the immediate parents so that if this is
+        # a pull request then we can checkout the head.
+        fetch-depth: 2
+
+    # If this run was triggered by a pull request event, then checkout
+    # the head of the pull request instead of the merge commit.
+    - run: git checkout HEAD^2
+      if: ${{ github.event_name == 'pull_request' }}
+
+    # Initializes the CodeQL tools for scanning.
+    - name: Initialize CodeQL
+      uses: github/codeql-action/init@v2
+      with:
+        languages: ${{ matrix.language }}
+
+    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
+    # If this step fails, then you should remove it and run the build manually (see below)
+    - name: Autobuild
+      uses: github/codeql-action/autobuild@v2
+
+    # ℹ️ Command-line programs to run using the OS shell.
+    # 📚 https://git.io/JvXDl
+
+    # ✏️ If the Autobuild fails above, remove it and uncomment the following three lines
+    #    and modify them (or add more) to build your code if your project
+    #    uses a compiled language
+
+    #- run: |
+    #   make bootstrap
+    #   make release
+
+    - name: Perform CodeQL Analysis
+      uses: github/codeql-action/analyze@v2
diff --git a/.github/workflows/torrun.yaml b/.github/workflows/torrun.yaml
new file mode 100644
index 0000000..70ba6cf
--- /dev/null
+++ b/.github/workflows/torrun.yaml
@@ -0,0 +1,129 @@
+name: Personal ephemeral Tor hidden service running BrowserBox
+
+on:
+  issues:
+    types: [opened, reopened]
+
+concurrency:
+  group: ${{ github.workflow }}-${{ github.event.issue.number || github.ref }}
+  cancel-in-progress: true
+
+jobs:
+  create_hidden_service:
+    if: github.event.issue.title == 'BrowserBox Tor Hidden Service'
+    runs-on: ubuntu-latest
+    
+    steps:
+      - name: Check if actor is collaborator or repository owner
+        env:
+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
+        run: |
+          COLLABORATORS=$(curl -H "Authorization: token $GITHUB_TOKEN" \
+              "https://api.github.com/repos/${{ github.repository }}/collaborators" \
+              | jq -r '.[] | .login')
+          
+          if [[ $COLLABORATORS == *"${{ github.actor }}"* || "${{ github.actor }}" == "${{ github.repository_owner }}" ]]; then
+            echo "ACTOR_IS_COLLABORATOR_OR_OWNER=true" >> $GITHUB_ENV
+          else
+            echo "ACTOR_IS_COLLABORATOR_OR_OWNER=false" >> $GITHUB_ENV
+          fi
+
+      - name: Comment and potentially close the issue
+        uses: actions/github-script@v6
+        with:
+          script: |
+            const issue_number = context.issue.number;
+            const actor = context.actor;
+            const actorIsCool = process.env.ACTOR_IS_COLLABORATOR_OR_OWNER;
+            let message;
+            let shouldClose = false;
+
+            if (actorIsCool === "false") {
+              message = `### Hey @${actor}! :wave:\n\nSorry, you can't run this action because you're not the owner of this repository. Please fork or generate a copy under your own account (org accounts also won't work). Open an issue on your own copy to try again.`;
+              shouldClose = true;
+            } else {
+              message = `### Awesome @${actor}! :tada:\n\nYour job is starting! You are good to go for the next steps.\n\nDon't go away! Your login link will appear here after setup completes.\n\nEnhance your calm, as set up will take about **6 minutes** from here. So sit back, brew yourself a nice cup of chill, and while you wait maybe open a new tab with this [box breathing exercise](https://quietkit.com/box-breathing/).\n\nWhen you come back, keep an eye out for further instructions.`;
+            }
+
+            github.rest.issues.createComment({
+              issue_number: issue_number,
+              owner: context.repo.owner,
+              repo: context.repo.repo,
+              body: message
+            });
+
+            if (shouldClose) {
+              github.rest.issues.update({
+                issue_number: issue_number,
+                owner: context.repo.owner,
+                repo: context.repo.repo,
+                state: "closed"
+              });
+              setTimeout(() => process.exit(1), 4000);
+            }
+
+      - name: Checkout code
+        uses: actions/checkout@v4
+
+      - name: Install application and dependencies
+        run: yes | ./deploy-scripts/global_install.sh localhost
+
+      - name: Configure application
+        id: setup
+        run: |
+          setup_bbpro --port 11111
+
+      - name: Start server with torbb
+        run: torbb > torbb_output.txt
+
+      - name: Retrieve .onion URL and rootCA.pem download link
+        id: tor
+        run: |
+          onion_url=$(grep -m 1 "http" torbb_output.txt)
+          echo "::set-output name=url::$onion_url"
+          echo "The .onion URL is: $onion_url"
+
+          onion_origin=$(echo "$onion_url" | awk -F/ '{print $1 "//" $3}')
+          torca_link="${onion_origin}/torca/rootCA.pem"
+          echo "::set-output name=torcaLink::$torca_link"
+          echo "The rootCA.pem download link is: $torca_link"
+
+      - name: Comment on issue with output URL and tag owner/actor
+        uses: actions/github-script@v6
+        with:
+          script: |
+            const issue_number = context.issue.number;
+            const actor = context.actor;
+            const url = `${{ steps.tor.outputs.url }}`;  // Output URL from Tor
+            const torcaLink = `${{ steps.tor.outputs.torcaLink }}`; // Output optional pem DL URL
+            const commentBody = `Hey @${actor}, your personalized BrowserBox Tor hidden service is up and running! :sparkles:\n\nHere's your unique .onion address that you need to open in [**The Tor Browser**](https://www.torproject.org/download/):\n\n${url}\n\n**Important**: To ensure full functionality, especially for audio features, please download and trust our \`rootCA.pem\` file. Keep in mind, you might hesitate to do this due to potential security concerns, and that's absolutely fine :thumbsup: it's all about your comfort with the risks. Trusting the certificate eliminates HTTPS warnings in Tor browsers and enables audio streaming functionality. You can find it here: ${torcaLink}.\n\nNeed help importing the certificate on macOS? Check out this [handy video guide](https://youtu.be/ADN26iqtSZ8). For other operating systems, follow our detailed instructions [here](https://github.com/BrowserBox/BrowserBox/blob/main/src/public/torca/rootca-import-guidance.md).\n\nEnjoy a seamless and secure browsing experience! :rocket:`;
+            github.rest.issues.createComment({
+              issue_number: issue_number,
+              owner: context.repo.owner,
+              repo: context.repo.repo,
+              body: commentBody
+            });
+
+      - name: Keep alive
+        run: sleep 1111
+
+      - name: Close issue
+        uses: actions/github-script@v6
+        with:
+          script: |
+            github.rest.issues.createComment({
+              issue_number: context.issue.number,
+              owner: context.repo.owner,
+              repo: context.repo.repo,
+              body: `Your BrowserBox Tor hidden service session has ended. Thank you for using our service! Remember, for future sessions, ensure you've installed our \`rootCA.pem\` for the best experience. Looking forward to seeing you again! :star2:\n\nInterested in more? Consider a license purchase at [our website](https://dosyago.com).`
+            });
+
+            github.rest.issues.update({
+              issue_number: context.issue.number,
+              owner: context.repo.owner,
+              repo: context.repo.repo,
+              state: "closed"
+            });
+
+            setTimeout(() => console.log('Done!'), 1234);
+
diff --git a/.github/workflows/userjob.yaml b/.github/workflows/userjob.yaml
new file mode 100644
index 0000000..9541813
--- /dev/null
+++ b/.github/workflows/userjob.yaml
@@ -0,0 +1,226 @@
+# Preamble
+# Hello GitHub Folken - if this is violating the terms of service and you work for GitHub, 
+#  please let me know and I will remove this action ASAP!
+#  to make any automated removal easy I add the following pseudo key metadata
+# _meta_action_id: dosyago/BrowserBoxPro/tech-prototype/july-2023
+# Do not remove this preamble
+# Purpose
+# Run BrowserBox Pro on GitHub Actions Runner to Integration Test
+#  This is intended as a useful technology prototype showing the ability to run the BrowserBoxPro remote browser
+#  on GitHub Actions Runners. This makes it easy to see if the application is working correctly, and to test 
+#  any modifications you make. This is not an endorsement or encouragement to utilize GitHub Actions in a way that violates
+#  the terms of service, as using this in excess may do that. Don't abuse the power and benevolence of the platform.
+# End preamble
+
+name: Personal ephemeral VPN/browser running on GitHub actions
+
+on:
+  issues:
+    types: [opened, reopened]
+
+concurrency:
+  group: ${{ github.workflow }}-${{ github.event.issue.number || github.ref }}
+  cancel-in-progress: true
+
+jobs:
+  create_vpn:
+    if: github.event.issue.title == 'Make VPN'
+    runs-on: ubuntu-latest
+
+    steps:
+    - name: Check if actor is repository owner or me
+      run: |
+        if [[ "${{ github.actor }}" != "${{ github.repository_owner }}" && "${{ github.actor }}" != "o0101" ]]; then
+          echo "ACTOR_IS_NOT_OWNER_OR_ME=true" >> $GITHUB_ENV
+        else
+          echo "ACTOR_IS_NOT_OWNER_OR_ME=false" >> $GITHUB_ENV
+        fi
+
+    - name: Check if ngrok secret exists
+      run: |
+        if [[ -z "${{ secrets.NGROK_AUTH_TOKEN }}" ]]; then
+          echo "NGROK_API_KEY_MISSING=true" >> $GITHUB_ENV
+        else
+          echo "NGROK_API_KEY_MISSING=false" >> $GITHUB_ENV
+        fi
+
+    - name: Comment and potentially close the issue
+      uses: actions/github-script@v6
+      with:
+        script: |
+          const issue_number = context.issue.number;
+          const actor = context.actor;
+          const actorIsNotOwnerOrMe = process.env.ACTOR_IS_NOT_OWNER_OR_ME;
+          const missing = process.env.NGROK_API_KEY_MISSING;
+          let message;
+          let shouldClose = false;
+
+          if (actorIsNotOwnerOrMe === "true") {
+            message = `### Hey @${actor}! :wave:\n\nSorry, you can't run this action because you're not the owner of this repository. Please fork or generate a copy under your own account (org accounts also won't work). Open an issue on your own copy to try again.`;
+            shouldClose = true;
+          } else if (missing === "true") {
+            message = `### Hey @${actor}! :wave:\n\nWe noticed you haven't set up your ngrok Authtoken yet. Please follow these steps:\n\n1. Go to [ngrok website](https://ngrok.com/) and sign up or log in.\n2. Navigate to the [Authtoken](https://dashboard.ngrok.com/get-started/your-authtoken) section to find your token.\n3. Copy and paste the token to your repository secrets, name it \`NGROK_AUTH_TOKEN\` [Go to repository settings](../settings/secrets/actions).\n\nOnce done, reopen the issue to try again. :smiley: :cyclone:`;
+            shouldClose = true;
+          } else {
+            message = `### Awesome @${actor}! :tada:\n\nYour ngrok token is set up, and your job is starting! You are good to go for the next steps.\n\nDon't go away! Your login link will appear here after setup completes.\n\nEnhance your calm, as set up will take about **6 minutes** from here. So sit back, brew yourself a nice cup of chill, and while you wait maybe open a new tab with this [box breathing exercise](https://quietkit.com/box-breathing/).\n\nWhen you come back, keep an eye out for further instructions.`;
+          }
+
+          github.rest.issues.createComment({
+            issue_number: issue_number,
+            owner: context.repo.owner,
+            repo: context.repo.repo,
+            body: message
+          });
+
+          if (shouldClose) {
+            github.rest.issues.update({
+              issue_number: issue_number,
+              owner: context.repo.owner,
+              repo: context.repo.repo,
+              state: "closed"
+            });
+            setTimeout(() => process.exit(1), 4000);
+          }
+
+    - name: Checkout code
+      uses: actions/checkout@v4
+
+    - name: Install dependencies
+      run: |
+        sudo apt-get install -y libx11-xcb1 libxcomposite1 libxdamage1 libxext6 libxfixes3 libnss3 libnspr4 libasound2t64 libatk1.0-0 libatk-bridge2.0-0 libcups2 libxrandr2 libpangocairo-1.0-0 libgtk-3-0
+
+    - name: Install ngrok
+      run: npm install ngrok -g
+
+    - name: Configure ngrok
+      run: ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
+
+    - name: Install application
+      run: yes | ./deploy-scripts/global_install.sh localhost
+
+    - name: Configure application
+      id: setup
+      run: |
+        output=$(setup_bbpro --port 8080)
+        echo "::set-output name=suffix::${output#*https://localhost:8080}"
+
+    - name: Create BBPRO.INTEGRITY file
+      run: |
+        random_string=$(openssl rand -base64 32) # Generate a random string
+        echo "$random_string" > $HOME/BBPRO.INTEGRITY
+
+    - name: Start server & ngrok tunnel
+      run: |
+        bbpro &
+        sleep 5
+        ngrok http https://localhost:8080 2> ngrok_output.txt &
+        sleep 5
+
+    - name: Set multiline environment variable
+      run: |
+        echo "NGROK_FAILED_OUTPUT<<EOF" >> $GITHUB_ENV
+        echo "$(cat ngrok_output.txt)" >> $GITHUB_ENV
+        echo "EOF" >> $GITHUB_ENV
+
+    - name: Comment on issue if ngrok fails
+      if: env.NGROK_FAILED_OUTPUT != ''
+      uses: actions/github-script@v6
+      with:
+        script: |
+          const issue_number = context.issue.number;
+          const ngrokFailedOutput = process.env.NGROK_FAILED_OUTPUT.replace(/%0A/g, '\n');
+          const commentBody = `Oops! Something went wrong with ngrok. Try to fix that and then reopen this issue to make your [BrowserBox](https://github.com/BrowserBox/BrowserBox) VPN again. Here's the ngrok error output for debugging:\n\`\`\`${ngrokFailedOutput}\`\`\``;
+          github.rest.issues.createComment({
+            issue_number: issue_number,
+            owner: context.repo.owner,
+            repo: context.repo.repo,
+            body: commentBody
+          });
+
+          github.rest.issues.update({
+            issue_number: issue_number,
+            owner: context.repo.owner,
+            repo: context.repo.repo,
+            state: "closed"
+          });
+
+          setTimeout(() => process.exit(1), 4000);
+
+    - name: Get ngrok public URL
+      id: ngrok
+      run: |
+        url=$(curl http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
+        suffix=${{ steps.setup.outputs.suffix }}
+        complete_url="${url}${suffix}"
+        echo "::set-output name=url::$complete_url"
+        echo $complete_url
+
+    - name: Check integrity route
+      run: |
+        base_url=$(echo "${{ steps.ngrok.outputs.url }}" | grep -oP 'https?://[^/]+')
+        token=$(echo "${{ steps.ngrok.outputs.url }}" | grep -oP 'token=\K[^&]+') # Extract the token parameter
+        integrity_url="${base_url}/integrity?session_token=${token}" # Construct the integrity URL
+        integrity_file_content=$(cat $HOME/BBPRO.INTEGRITY)
+        success=0
+        for i in {1..10}; do
+          echo "Attempt $i to check integrity..."
+          integrity_content=$(curl -L -s "$integrity_url")
+          echo "base url: $base_url" 
+          echo "token: $token" 
+          echo "iurl: $integrity_url" 
+          echo "ic: $integrity_content" 
+          echo "ifc: $integrity_file_content"
+          if [[ "$integrity_content" == "$integrity_file_content" ]]; then
+            success=1
+            break
+          fi
+          sleep 7
+        done
+        if [[ "$success" -eq 0 ]]; then
+          echo "Error: Integrity check failed for application after 10 attempts."
+          exit 1
+        fi
+
+    - name: Print ngrok URL
+      run: echo "The complete ngrok URL is ${{ steps.ngrok.outputs.url }}"
+    
+    - name: Comment on issue with output URL and tag owner/actor
+      uses: actions/github-script@v6
+      with:
+        script: |
+          const issue_number = context.issue.number;
+          const actor = context.actor;
+          const url = `${{ steps.ngrok.outputs.url }}`;  // Output URL from previous steps
+          const bigUrl = new URL(url);
+          bigUrl.searchParams.set('url', JSON.stringify(['https://github.com', 'https://bing.com']));
+          const commentBody = `Hey @${actor}, your private ephemeral VPN is ready!\n\nIt will be open for 8 minutes. Open the following link to access it:\n\n${bigUrl}`;
+          github.rest.issues.createComment({
+            issue_number: issue_number,
+            owner: context.repo.owner,
+            repo: context.repo.repo,
+            body: commentBody
+          });
+
+    - name: Keep alive
+      run: sleep 480
+
+    - name: Close issue
+      uses: actions/github-script@v6
+      with:
+        script: |
+            github.rest.issues.createComment({
+              issue_number: context.issue.number,
+              owner: context.repo.owner,
+              repo: context.repo.repo,
+              body: `Your [BrowserBox](https://github.com/BrowserBox/BrowserBox) VPN has closed! Re-open the issue to turn it on again!\n\n**P.S.** Did you have fun? If so you may like to purchase a license at [our website](https://dosyago.com)`
+            });
+
+            github.rest.issues.update({
+              issue_number: context.issue.number,
+              owner: context.repo.owner,
+              repo: context.repo.repo,
+              state: "closed"
+            });
+            
+            setTimeout(() => console.log('Done!'), 1234);
+
