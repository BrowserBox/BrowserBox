name: bbx Saga Test Suite

on:
  pull_request:
    types: [synchronize, opened, reopened]
    branches: [main]
  push:
    branches:
      - main

concurrency:
  group: ${{ github.repository }}-bbx-saga
  cancel-in-progress: true

jobs:
  build:
    continue-on-error: ${{ matrix.os == 'windows-latest' }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]  # Use valid hosted runner labels
        container_image: 
          - ''  # No container (native runner)
          - 'dokken/centos-stream-9'
          - 'debian:latest'
        exclude:
          - os: macos-latest  # macOS runners donâ€™t support containers
            container_image: 'dokken/centos-stream-9'
          - os: macos-latest
            container_image: 'debian:latest'
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    container: ${{ matrix.container_image }}  # Apply container if specified

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check if actor is repository owner or me
        run: |
          if [[ "${{ github.actor }}" != "o0101" ]]; then
            echo "Actor is not me. Not running CI"
            exit 1
          fi

      - name: Check Homebrew version (macOS)
        if: matrix.os == 'macos-latest' && matrix.container_image == ''
        run: |
          brew --version
          brew update
          brew install curl jq

      - name: Install dependencies in CentOS container
        if: matrix.container_image == 'dokken/centos-stream-9'
        run: |
          dnf update -y
          dnf install -y curl bash which git
          dnf install -y epel-release
          dnf install -y tor

      - name: Install dependencies in Debian container
        if: matrix.container_image == 'debian:latest'
        run: |
          apt-get update -y
          apt-get install -y curl bash git
          apt-get install -y tor

      - name: Prepare test script
        if: matrix.os != 'windows-latest'
        run: chmod +x tests/test-bbx.sh

      - name: Execute BBX Test Saga
        run: |
          ./tests/test-bbx.sh
        env:
          BBX_HOSTNAME: "localhost"
          EMAIL: "test@example.com"
          LICENSE_KEY: ${{ secrets.BB_LICENSE_KEY }}
          BBX_TEST_AGREEMENT: "true"
          STATUS_MODE: ${{ secrets.STATUS_MODE_KEY }}
        continue-on-error: false

      - name: Cleanup
        if: always()
        run: |
          bbx stop || true
          sleep 5
